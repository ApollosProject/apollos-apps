// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the Onboarding component should render Onboarding 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              Home
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransition={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "overflow": undefined,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      onLayout={[Function]}
                      pointerEvents="box-none"
                      style={
                        Array [
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "overflow": "hidden",
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          Object {},
                        ]
                      }
                    />
                    <View
                      style={
                        Object {
                          "backgroundColor": "rgb(249, 249, 251)",
                          "flex": 1,
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        }
                      }
                    />
                    <View
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "flex": 1,
                            "position": "relative",
                          },
                          undefined,
                        ]
                      }
                    >
                      <RCTScrollView
                        activeDot={
                          <View>
                            <mapProps(Component) />
                          </View>
                        }
                        automaticallyAdjustContentInsets={false}
                        autoplay={false}
                        autoplayDirection={true}
                        autoplayTimeout={2.5}
                        bounces={false}
                        contentContainerStyle={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                            },
                            undefined,
                          ]
                        }
                        contentOffset={
                          Object {
                            "x": 0,
                          }
                        }
                        disableNextButton={false}
                        disablePrevButton={false}
                        dot={
                          <View>
                            <mapProps(Component) />
                          </View>
                        }
                        horizontal={true}
                        index={0}
                        loadMinimal={true}
                        loadMinimalSize={1}
                        loop={false}
                        onComplete={[Function]}
                        onIndexChanged={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        pagingEnabled={true}
                        removeClippedSubviews={true}
                        scrollsToTop={false}
                        showsButtons={false}
                        showsHorizontalScrollIndicator={false}
                        showsPagination={true}
                        showsVerticalScrollIndicator={false}
                        userVersion={0}
                      >
                        <View>
                          <View
                            style={
                              Array [
                                Object {
                                  "height": 1334,
                                  "width": 750,
                                },
                                Object {
                                  "backgroundColor": "transparent",
                                },
                              ]
                            }
                          >
                            <RCTScrollView
                              contentContainerStyle={
                                Object {
                                  "minHeight": "100%",
                                }
                              }
                              overScrollMode="auto"
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View>
                                <View
                                  style={
                                    Object {
                                      "marginBottom": 48,
                                      "paddingHorizontal": 16,
                                      "paddingTop": 16,
                                    }
                                  }
                                >
                                  <View>
                                    <View
                                      style={
                                        Object {
                                          "paddingBottom": 8,
                                        }
                                      }
                                    >
                                      <Text
                                        style={
                                          Object {
                                            "color": "#00676D",
                                            "fontFamily": "InterUI-Black",
                                            "fontSize": 36,
                                            "lineHeight": 41.4,
                                          }
                                        }
                                      >
                                        Hey friend!
                                      </Text>
                                    </View>
                                    <Text
                                      style={
                                        Object {
                                          "color": "rgba(39, 39, 46, 0.6)",
                                          "fontFamily": "InterUI-Medium",
                                          "fontSize": 14,
                                          "lineHeight": 21,
                                        }
                                      }
                                    >
                                      We'd like to help personalize your mobile experience so we can help you with every step on your journey.
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </RCTScrollView>
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "bottom": 0,
                                  "flexDirection": "row-reverse",
                                  "justifyContent": "space-between",
                                  "left": 0,
                                  "marginVertical": 8,
                                  "paddingHorizontal": 16,
                                  "paddingVertical": 0,
                                  "position": "absolute",
                                  "right": 0,
                                }
                              }
                              vertical={false}
                            >
                              <View
                                edges={
                                  Array [
                                    "bottom",
                                  ]
                                }
                              >
                                <View
                                  accessible={true}
                                  focusable={true}
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <View
                                    bordered={false}
                                    disabled={false}
                                    pill={false}
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#17B582",
                                        "borderColor": "#17B582",
                                        "borderRadius": 16,
                                        "borderWidth": 2,
                                        "elevation": 2,
                                        "flexDirection": "row",
                                        "height": 48,
                                        "justifyContent": "center",
                                        "opacity": 1,
                                        "overflow": "hidden",
                                        "paddingHorizontal": 16,
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "#FFFFFF",
                                          "fontFamily": "InterUI-Medium",
                                          "fontSize": 14,
                                          "lineHeight": 21,
                                        }
                                      }
                                    >
                                      Next
                                    </Text>
                                    <RNSVGSvgView
                                      align="xMidYMid"
                                      bbHeight={20}
                                      bbWidth={20}
                                      color="#FFFFFF"
                                      height={20}
                                      id="Raw"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      size={20}
                                      style={
                                        Array [
                                          Object {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          Object {},
                                          null,
                                          Object {
                                            "flex": 0,
                                            "height": 20,
                                            "width": 20,
                                          },
                                        ]
                                      }
                                      tintColor="#FFFFFF"
                                      vbHeight={256}
                                      vbWidth={256}
                                      width={20}
                                    >
                                      <RNSVGGroup
                                        fill={
                                          Array [
                                            0,
                                            4278190080,
                                          ]
                                        }
                                        fillOpacity={1}
                                        fillRule={1}
                                        font={Object {}}
                                        matrix={
                                          Array [
                                            1,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0,
                                          ]
                                        }
                                        opacity={1}
                                        originX={0}
                                        originY={0}
                                        propList={Array []}
                                        rotation={0}
                                        scaleX={1}
                                        scaleY={1}
                                        skewX={0}
                                        skewY={0}
                                        stroke={null}
                                        strokeDasharray={null}
                                        strokeDashoffset={null}
                                        strokeLinecap={0}
                                        strokeLinejoin={0}
                                        strokeMiterlimit={4}
                                        strokeOpacity={1}
                                        strokeWidth={1}
                                        vectorEffect={0}
                                        x={0}
                                        y={0}
                                      >
                                        <RNSVGRect
                                          fill={null}
                                          fillOpacity={1}
                                          fillRule={1}
                                          height={256}
                                          matrix={
                                            Array [
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                            ]
                                          }
                                          opacity={1}
                                          originX={0}
                                          originY={0}
                                          propList={
                                            Array [
                                              "fill",
                                            ]
                                          }
                                          rotation={0}
                                          rx={0}
                                          ry={0}
                                          scaleX={1}
                                          scaleY={1}
                                          skewX={0}
                                          skewY={0}
                                          stroke={null}
                                          strokeDasharray={null}
                                          strokeDashoffset={null}
                                          strokeLinecap={0}
                                          strokeLinejoin={0}
                                          strokeMiterlimit={4}
                                          strokeOpacity={1}
                                          strokeWidth={1}
                                          vectorEffect={0}
                                          width={256}
                                          x={0}
                                          y={0}
                                        />
                                        <RNSVGLine
                                          fill={null}
                                          fillOpacity={1}
                                          fillRule={1}
                                          matrix={
                                            Array [
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                            ]
                                          }
                                          opacity={1}
                                          originX={0}
                                          originY={0}
                                          propList={
                                            Array [
                                              "fill",
                                              "stroke",
                                              "strokeWidth",
                                              "strokeLinecap",
                                              "strokeLinejoin",
                                            ]
                                          }
                                          rotation={0}
                                          scaleX={1}
                                          scaleY={1}
                                          skewX={0}
                                          skewY={0}
                                          stroke={
                                            Array [
                                              0,
                                              4294967295,
                                            ]
                                          }
                                          strokeDasharray={null}
                                          strokeDashoffset={null}
                                          strokeLinecap={1}
                                          strokeLinejoin={1}
                                          strokeMiterlimit={4}
                                          strokeOpacity={1}
                                          strokeWidth={16}
                                          vectorEffect={0}
                                          x={0}
                                          x1={40}
                                          x2={216}
                                          y={0}
                                          y1={128}
                                          y2={128}
                                        />
                                        <RNSVGPath
                                          d="M144 56 216 128 144 200"
                                          fill={null}
                                          fillOpacity={1}
                                          fillRule={1}
                                          matrix={
                                            Array [
                                              1,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                            ]
                                          }
                                          opacity={1}
                                          originX={0}
                                          originY={0}
                                          propList={
                                            Array [
                                              "fill",
                                              "stroke",
                                              "strokeWidth",
                                              "strokeLinecap",
                                              "strokeLinejoin",
                                            ]
                                          }
                                          rotation={0}
                                          scaleX={1}
                                          scaleY={1}
                                          skewX={0}
                                          skewY={0}
                                          stroke={
                                            Array [
                                              0,
                                              4294967295,
                                            ]
                                          }
                                          strokeDasharray={null}
                                          strokeDashoffset={null}
                                          strokeLinecap={1}
                                          strokeLinejoin={1}
                                          strokeMiterlimit={4}
                                          strokeOpacity={1}
                                          strokeWidth={16}
                                          vectorEffect={0}
                                          x={0}
                                          y={0}
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Array [
                                Object {
                                  "height": 1334,
                                  "width": 750,
                                },
                                Object {
                                  "backgroundColor": "transparent",
                                },
                              ]
                            }
                          >
                            <RCTScrollView
                              contentContainerStyle={
                                Object {
                                  "minHeight": "100%",
                                }
                              }
                              overScrollMode="auto"
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View>
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                      "justifyContent": "space-between",
                                      "marginBottom": 48,
                                      "paddingHorizontal": 16,
                                      "paddingTop": 16,
                                    }
                                  }
                                >
                                  <View>
                                    <View
                                      style={
                                        Object {
                                          "paddingBottom": 8,
                                        }
                                      }
                                    >
                                      <Text
                                        style={
                                          Object {
                                            "color": "#00676D",
                                            "fontFamily": "InterUI-Black",
                                            "fontSize": 36,
                                            "lineHeight": 41.4,
                                          }
                                        }
                                      >
                                        Let's select your local campus
                                      </Text>
                                    </View>
                                    <Text
                                      style={
                                        Object {
                                          "color": "rgba(39, 39, 46, 0.6)",
                                          "fontFamily": "InterUI-Medium",
                                          "fontSize": 14,
                                          "lineHeight": 21,
                                        }
                                      }
                                    >
                                      We'll use your location to connect you with your nearby campus and community
                                    </Text>
                                  </View>
                                  <View
                                    horizontal={false}
                                    style={
                                      Object {
                                        "paddingHorizontal": 0,
                                        "paddingVertical": 16,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        bordered={false}
                                        disabled={false}
                                        pill={false}
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#17B582",
                                            "borderColor": "#17B582",
                                            "borderRadius": 16,
                                            "borderWidth": 2,
                                            "elevation": 2,
                                            "flexDirection": "row",
                                            "height": 48,
                                            "justifyContent": "center",
                                            "opacity": 1,
                                            "overflow": "hidden",
                                            "paddingHorizontal": 16,
                                          }
                                        }
                                      >
                                        <Text
                                          style={
                                            Object {
                                              "color": "#FFFFFF",
                                              "fontFamily": "InterUI-Bold",
                                              "fontSize": 16,
                                              "lineHeight": 24,
                                            }
                                          }
                                        >
                                          Yes, find my local campus
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </RCTScrollView>
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "bottom": 0,
                                  "flexDirection": "row-reverse",
                                  "justifyContent": "space-between",
                                  "left": 0,
                                  "marginVertical": 8,
                                  "paddingHorizontal": 16,
                                  "paddingVertical": 0,
                                  "position": "absolute",
                                  "right": 0,
                                }
                              }
                              vertical={false}
                            >
                              <View
                                edges={
                                  Array [
                                    "bottom",
                                  ]
                                }
                              >
                                <Text
                                  onPress={[Function]}
                                  style={
                                    Object {
                                      "color": "rgba(39, 39, 46, 0.3)",
                                      "marginLeft": -16,
                                      "paddingHorizontal": 16,
                                      "paddingVertical": 15,
                                    }
                                  }
                                  trackEventName="Ask Location Skipped"
                                >
                                  Skip
                                </Text>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "height": 1334,
                                "justifyContent": "center",
                                "width": 750,
                              }
                            }
                          >
                            <ActivityIndicator
                              animating={true}
                              color="#999999"
                              hidesWhenStopped={true}
                              size="small"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "height": 1334,
                                "justifyContent": "center",
                                "width": 750,
                              }
                            }
                          >
                            <ActivityIndicator
                              animating={true}
                              color="#999999"
                              hidesWhenStopped={true}
                              size="small"
                            />
                          </View>
                        </View>
                      </RCTScrollView>
                      <View
                        pointerEvents="none"
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "bottom": 25,
                              "flex": 1,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#00676D",
                                "borderRadius": 4,
                                "height": 8,
                                "margin": 4,
                                "width": 8,
                              }
                            }
                          />
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 4,
                                "height": 8,
                                "margin": 4,
                                "width": 8,
                              }
                            }
                          />
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 4,
                                "height": 8,
                                "margin": 4,
                                "width": 8,
                              }
                            }
                          />
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 4,
                                "height": 8,
                                "margin": 4,
                                "width": 8,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

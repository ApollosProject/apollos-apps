// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the ContentParentFeedConnected component should render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(224, 224, 224)",
              "flex": 1,
              "shadowColor": "rgb(224, 224, 224)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              Home
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransitionStart={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <RCTScrollView
                    collapsable={false}
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "id": "fakeId0",
                          "node": Object {
                            "__typename": "MediaContentItem",
                            "coverImage": "",
                            "id": "fakeId0",
                            "isLoading": true,
                            "parentChannel": Object {
                              "name": "",
                            },
                            "title": "",
                          },
                        },
                        Object {
                          "id": "fakeId1",
                          "node": Object {
                            "__typename": "MediaContentItem",
                            "coverImage": "",
                            "id": "fakeId0",
                            "isLoading": true,
                            "parentChannel": Object {
                              "name": "",
                            },
                            "title": "",
                          },
                        },
                        Object {
                          "id": "fakeId2",
                          "node": Object {
                            "__typename": "MediaContentItem",
                            "coverImage": "",
                            "id": "fakeId0",
                            "isLoading": true,
                            "parentChannel": Object {
                              "name": "",
                            },
                            "title": "",
                          },
                        },
                        Object {
                          "id": "fakeId3",
                          "node": Object {
                            "__typename": "MediaContentItem",
                            "coverImage": "",
                            "id": "fakeId0",
                            "isLoading": true,
                            "parentChannel": Object {
                              "name": "",
                            },
                            "title": "",
                          },
                        },
                        Object {
                          "id": "fakeId4",
                          "node": Object {
                            "__typename": "MediaContentItem",
                            "coverImage": "",
                            "id": "fakeId0",
                            "isLoading": true,
                            "parentChannel": Object {
                              "name": "",
                            },
                            "title": "",
                          },
                        },
                      ]
                    }
                    decelerationRate="fast"
                    disableVirtualization={false}
                    fetchMore={[Function]}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    getItemLayout={[Function]}
                    horizontal={true}
                    initialNumToRender={10}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "node": Object {
                          "__typename": "MediaContentItem",
                          "coverImage": "",
                          "id": "fakeId0",
                          "isLoading": true,
                          "parentChannel": Object {
                            "name": "",
                          },
                          "title": "",
                        },
                      }
                    }
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReached={[Function]}
                    onEndReachedThreshold={2}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    refreshing={true}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    renderScrollComponent={[Function]}
                    scrollEventThrottle={50}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    stickyHeaderIndices={Array []}
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            null,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          clickable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "transform": Array [
                                Object {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            inHorizontalList={true}
                            isLoading={true}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderRadius": 16,
                                "height": 240,
                                "margin": 8,
                                "marginBottom": 12,
                                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                                "shadowOffset": Object {
                                  "height": 2,
                                  "width": 0,
                                },
                                "shadowOpacity": 1,
                                "shadowRadius": 8,
                                "width": 240,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 16,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#A5A5A5",
                                    "overflow": "hidden",
                                    "width": "100%",
                                  }
                                }
                              >
                                <RCTImageView
                                  fadeDuration={250}
                                  hasTitleAndSummary={false}
                                  isLoading={true}
                                  onLoad={[Function]}
                                  resizeMode="cover"
                                  source={Array []}
                                  style={
                                    Object {
                                      "aspectRatio": 1.5,
                                      "backgroundColor": "#A5A5A5",
                                      "overflow": "hidden",
                                      "resizeMode": "cover",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </View>
                              <View
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "paddingBottom": 24,
                                    "paddingHorizontal": 16,
                                    "paddingVertical": 16,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            null,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          clickable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "transform": Array [
                                Object {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            inHorizontalList={true}
                            isLoading={true}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderRadius": 16,
                                "height": 240,
                                "margin": 8,
                                "marginBottom": 12,
                                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                                "shadowOffset": Object {
                                  "height": 2,
                                  "width": 0,
                                },
                                "shadowOpacity": 1,
                                "shadowRadius": 8,
                                "width": 240,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 16,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#A5A5A5",
                                    "overflow": "hidden",
                                    "width": "100%",
                                  }
                                }
                              >
                                <RCTImageView
                                  fadeDuration={250}
                                  hasTitleAndSummary={false}
                                  isLoading={true}
                                  onLoad={[Function]}
                                  resizeMode="cover"
                                  source={Array []}
                                  style={
                                    Object {
                                      "aspectRatio": 1.5,
                                      "backgroundColor": "#A5A5A5",
                                      "overflow": "hidden",
                                      "resizeMode": "cover",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </View>
                              <View
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "paddingBottom": 24,
                                    "paddingHorizontal": 16,
                                    "paddingVertical": 16,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            null,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          clickable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "transform": Array [
                                Object {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            inHorizontalList={true}
                            isLoading={true}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderRadius": 16,
                                "height": 240,
                                "margin": 8,
                                "marginBottom": 12,
                                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                                "shadowOffset": Object {
                                  "height": 2,
                                  "width": 0,
                                },
                                "shadowOpacity": 1,
                                "shadowRadius": 8,
                                "width": 240,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 16,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#A5A5A5",
                                    "overflow": "hidden",
                                    "width": "100%",
                                  }
                                }
                              >
                                <RCTImageView
                                  fadeDuration={250}
                                  hasTitleAndSummary={false}
                                  isLoading={true}
                                  onLoad={[Function]}
                                  resizeMode="cover"
                                  source={Array []}
                                  style={
                                    Object {
                                      "aspectRatio": 1.5,
                                      "backgroundColor": "#A5A5A5",
                                      "overflow": "hidden",
                                      "resizeMode": "cover",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </View>
                              <View
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "paddingBottom": 24,
                                    "paddingHorizontal": 16,
                                    "paddingVertical": 16,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            null,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          clickable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "transform": Array [
                                Object {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            inHorizontalList={true}
                            isLoading={true}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderRadius": 16,
                                "height": 240,
                                "margin": 8,
                                "marginBottom": 12,
                                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                                "shadowOffset": Object {
                                  "height": 2,
                                  "width": 0,
                                },
                                "shadowOpacity": 1,
                                "shadowRadius": 8,
                                "width": 240,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 16,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#A5A5A5",
                                    "overflow": "hidden",
                                    "width": "100%",
                                  }
                                }
                              >
                                <RCTImageView
                                  fadeDuration={250}
                                  hasTitleAndSummary={false}
                                  isLoading={true}
                                  onLoad={[Function]}
                                  resizeMode="cover"
                                  source={Array []}
                                  style={
                                    Object {
                                      "aspectRatio": 1.5,
                                      "backgroundColor": "#A5A5A5",
                                      "overflow": "hidden",
                                      "resizeMode": "cover",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </View>
                              <View
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "paddingBottom": 24,
                                    "paddingHorizontal": 16,
                                    "paddingVertical": 16,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            null,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          clickable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "transform": Array [
                                Object {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            inHorizontalList={true}
                            isLoading={true}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderRadius": 16,
                                "height": 240,
                                "margin": 8,
                                "marginBottom": 12,
                                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                                "shadowOffset": Object {
                                  "height": 2,
                                  "width": 0,
                                },
                                "shadowOpacity": 1,
                                "shadowRadius": 8,
                                "width": 240,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 16,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#A5A5A5",
                                    "overflow": "hidden",
                                    "width": "100%",
                                  }
                                }
                              >
                                <RCTImageView
                                  fadeDuration={250}
                                  hasTitleAndSummary={false}
                                  isLoading={true}
                                  onLoad={[Function]}
                                  resizeMode="cover"
                                  source={Array []}
                                  style={
                                    Object {
                                      "aspectRatio": 1.5,
                                      "backgroundColor": "#A5A5A5",
                                      "overflow": "hidden",
                                      "resizeMode": "cover",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </View>
                              <View
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "paddingBottom": 24,
                                    "paddingHorizontal": 16,
                                    "paddingVertical": 16,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

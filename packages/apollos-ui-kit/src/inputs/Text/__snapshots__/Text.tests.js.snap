// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Text Input component should render as a numeric field 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      disabled={false}
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "flex": 1,
                "opacity": 0,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              keyboardType="numeric"
              onBlur={[Function]}
              onFocus={[Function]}
              placeholder="Some placeholder"
              placeholderTextColor="rgba(48, 48, 48, 0.6)"
              returnKeyType="done"
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 14,
                  "height": 38,
                  "paddingVertical": 0,
                }
              }
              type="numeric"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "transform": Array [
                Object {
                  "scale": 1,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#505050",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
                "paddingVertical": 4,
              }
            }
          >
            Numeric
          </Text>
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "right": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#A5A5A5",
                "bottom": -0.5,
                "height": 0.5,
              }
            }
          />
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "transform": Array [
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          >
            <View
              hasError={false}
              style={
                Object {
                  "backgroundColor": "#00676D",
                  "bottom": 0,
                  "height": 0.5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The Text Input component should render as a password field with an icon 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      disabled={false}
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "flex": 1,
                "opacity": 0,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              autoCorrect={false}
              editable={true}
              onBlur={[Function]}
              onFocus={[Function]}
              placeholder="Some placeholder"
              placeholderTextColor="rgba(48, 48, 48, 0.6)"
              returnKeyType="done"
              secureTextEntry={true}
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 14,
                  "height": 38,
                  "paddingVertical": 0,
                }
              }
              type="password"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="18"
              bbWidth="18"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  undefined,
                  false,
                  Object {
                    "flex": 0,
                    "height": 18,
                    "width": 18,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGPath
                d="M9 11.18h6.4V8.73c0-.9-.3-1.68-.94-2.32-.62-.6-1.38-.9-2.26-.9-.88 0-1.64.3-2.26.97C9.3 7.1 9 7.87 9 8.77v2.45zm10.4 1.23v7.4c0 .37-.12.66-.35.9-.23.24-.52.36-.85.36h-12c-.33 0-.62-.1-.85-.35-.23-.24-.35-.53-.35-.87v-7.4c0-.32.12-.6.35-.85.23-.24.52-.36.85-.36h.4V8.74c0-1.57.55-2.92 1.65-4.04C9.35 3.5 10.67 3 12.2 3c1.53 0 2.85.56 3.95 1.7 1.1 1.1 1.65 2.46 1.65 4.03v2.45h.4c.33 0 .62.12.85.36.23.24.35.53.35.87z"
                fill={
                  Array [
                    0,
                    0.18823529411764706,
                    0.18823529411764706,
                    0.18823529411764706,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              />
            </RNSVGSvgView>
          </View>
        </View>
        <View
          onLayout={[Function]}
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "transform": Array [
                Object {
                  "scale": 1,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#505050",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
                "paddingVertical": 4,
              }
            }
          >
            Password
          </Text>
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "right": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#A5A5A5",
                "bottom": -0.5,
                "height": 0.5,
              }
            }
          />
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "transform": Array [
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          >
            <View
              hasError={false}
              style={
                Object {
                  "backgroundColor": "#00676D",
                  "bottom": 0,
                  "height": 0.5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The Text Input component should render as a phone number field 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      disabled={false}
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "flex": 1,
                "opacity": 0,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              keyboardType="phone-pad"
              onBlur={[Function]}
              onFocus={[Function]}
              placeholder="Some placeholder"
              placeholderTextColor="rgba(48, 48, 48, 0.6)"
              returnKeyType="done"
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 14,
                  "height": 38,
                  "paddingVertical": 0,
                }
              }
              type="phone"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "transform": Array [
                Object {
                  "scale": 1,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#505050",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
                "paddingVertical": 4,
              }
            }
          >
            Phone Number
          </Text>
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "right": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#A5A5A5",
                "bottom": -0.5,
                "height": 0.5,
              }
            }
          />
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "transform": Array [
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          >
            <View
              hasError={false}
              style={
                Object {
                  "backgroundColor": "#00676D",
                  "bottom": 0,
                  "height": 0.5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The Text Input component should render as an email field 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      disabled={false}
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "flex": 1,
                "opacity": 0,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              autoCorrect={false}
              editable={true}
              keyboardType="email-address"
              onBlur={[Function]}
              onFocus={[Function]}
              placeholder="Some placeholder"
              placeholderTextColor="rgba(48, 48, 48, 0.6)"
              returnKeyType="done"
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 14,
                  "height": 38,
                  "paddingVertical": 0,
                }
              }
              type="email"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "transform": Array [
                Object {
                  "scale": 1,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#505050",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
                "paddingVertical": 4,
              }
            }
          >
            Email
          </Text>
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "right": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#A5A5A5",
                "bottom": -0.5,
                "height": 0.5,
              }
            }
          />
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "transform": Array [
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          >
            <View
              hasError={false}
              style={
                Object {
                  "backgroundColor": "#00676D",
                  "bottom": 0,
                  "height": 0.5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The Text Input component should render correctly 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      disabled={false}
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "flex": 1,
                "opacity": 0,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              onBlur={[Function]}
              onFocus={[Function]}
              placeholder="Some placeholder"
              placeholderTextColor="rgba(48, 48, 48, 0.6)"
              returnKeyType="done"
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 14,
                  "height": 38,
                  "paddingVertical": 0,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "transform": Array [
                Object {
                  "scale": 1,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#505050",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
                "paddingVertical": 4,
              }
            }
          >
            Some label text
          </Text>
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "right": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#A5A5A5",
                "bottom": -0.5,
                "height": 0.5,
              }
            }
          />
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "transform": Array [
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          >
            <View
              hasError={false}
              style={
                Object {
                  "backgroundColor": "#00676D",
                  "bottom": 0,
                  "height": 0.5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the HorizontalContentSeriesFeedConnected component should render 1`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "padding": 8,
      "paddingBottom": 0,
    }
  }
  data={
    Array [
      Object {
        "__typename": "DevotionalContentItem",
        "coverImage": Object {},
        "hyphenatedTitle": "God sees who you can be not who you are",
        "id": "DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d",
        "parentChannel": Object {
          "__typename": "ContentChannel",
          "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
          "name": "Devotional",
        },
        "summary": "bla bla bla",
        "theme": null,
        "title": "God sees who you can be not who you are",
        "videos": Array [],
      },
      Object {
        "__typename": "DevotionalContentItem",
        "coverImage": Object {},
        "hyphenatedTitle": "Thank God for the friends who will tell it like it is",
        "id": "DevotionalContentItem:fbea6914a3e8877516cbd333d919075d",
        "parentChannel": Object {
          "__typename": "ContentChannel",
          "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
          "name": "Devotional",
        },
        "summary": "bla bla bla",
        "theme": null,
        "title": "Thank God for the friends who will tell it like it is",
        "videos": Array [],
      },
      Object {
        "__typename": "DevotionalContentItem",
        "coverImage": Object {},
        "hyphenatedTitle": "No sin is too bad",
        "id": "DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4",
        "parentChannel": Object {
          "__typename": "ContentChannel",
          "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
          "name": "Devotional",
        },
        "summary": "bla bla bla",
        "theme": null,
        "title": "No sin is too bad",
        "videos": Array [],
      },
      Object {
        "__typename": "DevotionalContentItem",
        "coverImage": Object {},
        "hyphenatedTitle": "Change starts with a choice",
        "id": "DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d",
        "parentChannel": Object {
          "__typename": "ContentChannel",
          "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
          "name": "Devotional",
        },
        "summary": "bla bla bla",
        "theme": null,
        "title": "Change starts with a choice",
        "videos": Array [],
      },
    ]
  }
  decelerationRate="fast"
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  horizontal={true}
  initialNumToRender={10}
  initialScrollIndex={0}
  keyExtractor={[Function]}
  loadingStateObject={
    Object {
      "node": Object {
        "__typename": "MediaContentItem",
        "coverImage": "",
        "id": "fakeId0",
        "isLoading": true,
        "parentChannel": Object {
          "name": "",
        },
        "title": "",
      },
    }
  }
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onEndReachedThreshold={2}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  renderScrollComponent={[Function]}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  snapToAlignment="start"
  snapToInterval={256}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        accessible={true}
        clickable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          __typename="DevotionalContentItem"
          disabled={false}
          id="DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d"
          inHorizontalList={true}
          isLive={false}
          isLoading={false}
          parentChannel={
            Object {
              "__typename": "ContentChannel",
              "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
              "name": "Devotional",
            }
          }
          style={
            Object {
              "backgroundColor": "#303030",
              "borderRadius": 16,
              "height": 240,
              "margin": 8,
              "shadowColor": "rgba(165, 165, 165, 0.6)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 6,
              "width": 240,
            }
          }
          summary="bla bla bla"
          videos={Array []}
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                forceRatio={1}
                style={
                  Object {
                    "aspectRatio": 1,
                    "backgroundColor": "#A5A5A5",
                    "width": "100%",
                  }
                }
              />
              <BVLinearGradient
                colors={
                  Array [
                    1711276032,
                    2147483648,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    1,
                  ]
                }
                overlayColor="#000000"
                overlayType="gradient-bottom"
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "paddingBottom": 24,
                  "paddingHorizontal": 16,
                  "paddingVertical": 16,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexDirection": "row",
                    "paddingTop": 16,
                  }
                }
              >
                <View
                  hasAction={false}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={4}
                    style={
                      Object {
                        "color": "#F8F7F4",
                        "fontFamily": "InterUI-Black",
                        "fontSize": 24,
                        "lineHeight": 27.6,
                      }
                    }
                  >
                    God sees who you can be not who you are
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        accessible={true}
        clickable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          __typename="DevotionalContentItem"
          disabled={false}
          id="DevotionalContentItem:fbea6914a3e8877516cbd333d919075d"
          inHorizontalList={true}
          isLive={false}
          isLoading={false}
          parentChannel={
            Object {
              "__typename": "ContentChannel",
              "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
              "name": "Devotional",
            }
          }
          style={
            Object {
              "backgroundColor": "#303030",
              "borderRadius": 16,
              "height": 240,
              "margin": 8,
              "shadowColor": "rgba(165, 165, 165, 0.6)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 6,
              "width": 240,
            }
          }
          summary="bla bla bla"
          videos={Array []}
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                forceRatio={1}
                style={
                  Object {
                    "aspectRatio": 1,
                    "backgroundColor": "#A5A5A5",
                    "width": "100%",
                  }
                }
              />
              <BVLinearGradient
                colors={
                  Array [
                    1711276032,
                    2147483648,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    1,
                  ]
                }
                overlayColor="#000000"
                overlayType="gradient-bottom"
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "paddingBottom": 24,
                  "paddingHorizontal": 16,
                  "paddingVertical": 16,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexDirection": "row",
                    "paddingTop": 16,
                  }
                }
              >
                <View
                  hasAction={false}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={4}
                    style={
                      Object {
                        "color": "#F8F7F4",
                        "fontFamily": "InterUI-Black",
                        "fontSize": 24,
                        "lineHeight": 27.6,
                      }
                    }
                  >
                    Thank God for the friends who will tell it like it is
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        accessible={true}
        clickable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          __typename="DevotionalContentItem"
          disabled={false}
          id="DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4"
          inHorizontalList={true}
          isLive={false}
          isLoading={false}
          parentChannel={
            Object {
              "__typename": "ContentChannel",
              "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
              "name": "Devotional",
            }
          }
          style={
            Object {
              "backgroundColor": "#303030",
              "borderRadius": 16,
              "height": 240,
              "margin": 8,
              "shadowColor": "rgba(165, 165, 165, 0.6)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 6,
              "width": 240,
            }
          }
          summary="bla bla bla"
          videos={Array []}
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                forceRatio={1}
                style={
                  Object {
                    "aspectRatio": 1,
                    "backgroundColor": "#A5A5A5",
                    "width": "100%",
                  }
                }
              />
              <BVLinearGradient
                colors={
                  Array [
                    1711276032,
                    2147483648,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    1,
                  ]
                }
                overlayColor="#000000"
                overlayType="gradient-bottom"
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "paddingBottom": 24,
                  "paddingHorizontal": 16,
                  "paddingVertical": 16,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexDirection": "row",
                    "paddingTop": 16,
                  }
                }
              >
                <View
                  hasAction={false}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={4}
                    style={
                      Object {
                        "color": "#F8F7F4",
                        "fontFamily": "InterUI-Black",
                        "fontSize": 24,
                        "lineHeight": 27.6,
                      }
                    }
                  >
                    No sin is too bad
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        accessible={true}
        clickable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          __typename="DevotionalContentItem"
          disabled={false}
          id="DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d"
          inHorizontalList={true}
          isLive={false}
          isLoading={false}
          parentChannel={
            Object {
              "__typename": "ContentChannel",
              "id": "ContentChannel:559b23fd0aa90e81b1c023e72e230fa1",
              "name": "Devotional",
            }
          }
          style={
            Object {
              "backgroundColor": "#303030",
              "borderRadius": 16,
              "height": 240,
              "margin": 8,
              "shadowColor": "rgba(165, 165, 165, 0.6)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 6,
              "width": 240,
            }
          }
          summary="bla bla bla"
          videos={Array []}
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                forceRatio={1}
                style={
                  Object {
                    "aspectRatio": 1,
                    "backgroundColor": "#A5A5A5",
                    "width": "100%",
                  }
                }
              />
              <BVLinearGradient
                colors={
                  Array [
                    1711276032,
                    2147483648,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    1,
                  ]
                }
                overlayColor="#000000"
                overlayType="gradient-bottom"
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "paddingBottom": 24,
                  "paddingHorizontal": 16,
                  "paddingVertical": 16,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexDirection": "row",
                    "paddingTop": 16,
                  }
                }
              >
                <View
                  hasAction={false}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={4}
                    style={
                      Object {
                        "color": "#F8F7F4",
                        "fontFamily": "InterUI-Black",
                        "fontSize": 24,
                        "lineHeight": 27.6,
                      }
                    }
                  >
                    Change starts with a choice
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Avatar component should render correctly sized notification dots 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 48,
        "justifyContent": "center",
        "width": 48,
      }
    }
    themeSize={48}
  >
    <Image
      fadeDuration={250}
      onLoad={[Function]}
      size="small"
      source={
        Array [
          Object {
            "cache": "force-cache",
            "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
          },
        ]
      }
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "borderRadius": 24,
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": "100%",
        }
      }
      themeSize={48}
      unread={true}
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 72,
        "justifyContent": "center",
        "width": 72,
      }
    }
    themeSize={72}
  >
    <Image
      fadeDuration={250}
      onLoad={[Function]}
      size="medium"
      source={
        Array [
          Object {
            "cache": "force-cache",
            "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
          },
        ]
      }
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "borderRadius": 36,
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": "100%",
        }
      }
      themeSize={72}
      unread={true}
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 120,
        "justifyContent": "center",
        "width": 120,
      }
    }
    themeSize={120}
  >
    <Image
      fadeDuration={250}
      onLoad={[Function]}
      size="large"
      source={
        Array [
          Object {
            "cache": "force-cache",
            "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
          },
        ]
      }
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "borderRadius": 60,
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": "100%",
        }
      }
      themeSize={120}
      unread={true}
    />
  </View>,
]
`;

exports[`The Avatar component should render icon button 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": 48,
      "justifyContent": "center",
      "width": 48,
    }
  }
  themeSize={48}
>
  <Image
    fadeDuration={250}
    onLoad={[Function]}
    source={
      Array [
        Object {
          "cache": "force-cache",
          "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
        },
      ]
    }
    style={
      Object {
        "backgroundColor": "#A5A5A5",
        "borderRadius": 24,
        "bottom": 0,
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": "100%",
      }
    }
    themeSize={48}
  />
  <View
    style={
      Object {
        "bottom": 0,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        borderRadius={19.2}
        iconPadding={3.84}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "padding": 3.84,
            "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 8,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={9.6}
          bbWidth={9.6}
          color="#00676D"
          height={9.6}
          id="Raw"
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={9.6}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {},
              null,
              Object {
                "flex": 0,
                "height": 9,
                "width": 9,
              },
            ]
          }
          tintColor="#00676D"
          vbHeight={256.00098}
          vbWidth={256.00098}
          width={9.6}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGRect
              fill={null}
              fillOpacity={1}
              fillRule={1}
              height={256}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              rx={0}
              ry={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              width={256}
              x={0}
              y={0}
            />
            <RNSVGCircle
              cx={128}
              cy={128}
              fill={null}
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeLinecap",
                  "strokeLinejoin",
                ]
              }
              r={48}
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={
                Array [
                  0,
                  4278216557,
                ]
              }
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={1}
              strokeLinejoin={1}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={16}
              vectorEffect={0}
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M183.66087,65.08649a84.52233,84.52233,0,0,1,7.2522,7.2521l27.32234,3.90156A103.36981,103.36981,0,0,1,228.39912,100.801L211.84465,122.8728s.20824,6.83942.00065,10.2547l16.561,22.07863a103.36931,103.36931,0,0,1-10.18033,24.554l-27.31288,3.90133s-4.689,4.98345-7.25071,7.25163l-3.90155,27.32234A103.36971,103.36971,0,0,1,155.2,228.39912l-22.07039-16.55388a84.521,84.521,0,0,1-10.25609.00006l-22.07863,16.561a103.36914,103.36914,0,0,1-24.554-10.18033l-3.90076-27.31148a84.521,84.521,0,0,1-7.2522-7.25211l-27.32235-3.90155A103.37009,103.37009,0,0,1,27.60186,155.2l16.55447-22.07178s-.20824-6.83942-.00066-10.2547l-16.561-22.07863A103.37,103.37,0,0,1,37.775,76.24087l27.31149-3.90076a84.52233,84.52233,0,0,1,7.2521-7.2522l3.90156-27.32235A103.37019,103.37019,0,0,1,100.801,27.60186l22.0704,16.55388a84.523,84.523,0,0,1,10.25609-.00007l22.07863-16.561a103.37014,103.37014,0,0,1,24.554,10.18033Z"
              fill={null}
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeLinecap",
                  "strokeLinejoin",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={
                Array [
                  0,
                  4278216557,
                ]
              }
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={1}
              strokeLinejoin={1}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={16}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`The Avatar component should render icon button 2`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": 48,
      "justifyContent": "center",
      "width": 48,
    }
  }
  themeSize={48}
>
  <View
    backgroundColor={null}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(142, 142, 147, 0.2)",
        "borderRadius": 48,
        "height": 48,
        "justifyContent": "center",
        "width": 48,
      }
    }
    themeSize={48}
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={24}
      bbWidth={24}
      color="rgba(39, 39, 46, 0.3)"
      height={24}
      id="Raw"
      meetOrSlice={0}
      minX={0}
      minY={0}
      size={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {},
          null,
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      tintColor="rgba(39, 39, 46, 0.3)"
      vbHeight={256}
      vbWidth={256}
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4278190080,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={Array []}
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      >
        <RNSVGRect
          fill={null}
          fillOpacity={1}
          fillRule={1}
          height={256}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
            ]
          }
          rotation={0}
          rx={0}
          ry={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width={256}
          x={0}
          y={0}
        />
        <RNSVGCircle
          cx={128}
          cy={96}
          fill={null}
          fillOpacity={1}
          fillRule={1}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeMiterlimit",
            ]
          }
          r={64}
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={
            Array [
              0,
              1294411566,
            ]
          }
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={10}
          strokeOpacity={1}
          strokeWidth={16}
          vectorEffect={0}
          x={0}
          y={0}
        />
        <RNSVGPath
          d="M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002"
          fill={null}
          fillOpacity={1}
          fillRule={1}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={
            Array [
              0,
              1294411566,
            ]
          }
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={16}
          vectorEffect={0}
          x={0}
          y={0}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      Object {
        "bottom": 0,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 50,
          "height": 43,
          "justifyContent": "center",
          "padding": 9.6,
          "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 8,
          "width": 43,
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size={9.6}
        style={
          Object {
            "alignSelf": "center",
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`The Avatar component should render large 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": 120,
      "justifyContent": "center",
      "width": 120,
    }
  }
  themeSize={120}
>
  <Image
    fadeDuration={250}
    onLoad={[Function]}
    size="large"
    source={
      Array [
        Object {
          "cache": "force-cache",
          "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
        },
      ]
    }
    style={
      Object {
        "backgroundColor": "#A5A5A5",
        "borderRadius": 60,
        "bottom": 0,
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": "100%",
      }
    }
    themeSize={120}
  />
</View>
`;

exports[`The Avatar component should render medium 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": 72,
      "justifyContent": "center",
      "width": 72,
    }
  }
  themeSize={72}
>
  <Image
    fadeDuration={250}
    onLoad={[Function]}
    size="medium"
    source={
      Array [
        Object {
          "cache": "force-cache",
          "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
        },
      ]
    }
    style={
      Object {
        "backgroundColor": "#A5A5A5",
        "borderRadius": 36,
        "bottom": 0,
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": "100%",
      }
    }
    themeSize={72}
  />
</View>
`;

exports[`The Avatar component should render small 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": 48,
      "justifyContent": "center",
      "width": 48,
    }
  }
  themeSize={48}
>
  <Image
    fadeDuration={250}
    onLoad={[Function]}
    size="small"
    source={
      Array [
        Object {
          "cache": "force-cache",
          "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
        },
      ]
    }
    style={
      Object {
        "backgroundColor": "#A5A5A5",
        "borderRadius": 24,
        "bottom": 0,
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": "100%",
      }
    }
    themeSize={48}
  />
</View>
`;

exports[`The Avatar component should render with a themeSize 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": 80,
      "justifyContent": "center",
      "width": 80,
    }
  }
  themeSize={80}
>
  <Image
    fadeDuration={250}
    onLoad={[Function]}
    source={
      Array [
        Object {
          "cache": "force-cache",
          "uri": "https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg",
        },
      ]
    }
    style={
      Object {
        "backgroundColor": "#A5A5A5",
        "borderRadius": 40,
        "bottom": 0,
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": "100%",
      }
    }
    themeSize={80}
  />
</View>
`;

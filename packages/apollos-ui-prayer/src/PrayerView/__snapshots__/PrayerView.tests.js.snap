// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The PrayerView component should accept an onPressPrimary function 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                bordered={false}
                disabled={false}
                pill={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#17B582",
                    "borderColor": "#17B582",
                    "borderRadius": 16,
                    "borderWidth": 2,
                    "elevation": 2,
                    "flexDirection": "row",
                    "height": 48,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                    "paddingHorizontal": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "InterUI-Bold",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  üôè Pray
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`The PrayerView component should accept an onPressSecondary function 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                bordered={true}
                disabled={false}
                pill={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderColor": "#17B582",
                    "borderRadius": 16,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "height": 48,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                    "paddingHorizontal": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#17B582",
                      "fontFamily": "InterUI-Medium",
                      "fontSize": 14,
                      "lineHeight": 21,
                    }
                  }
                >
                  How to Pray
                </Text>
              </View>
            </View>
            <View
              bordered={false}
              disabled={true}
              pill={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#17B582",
                  "borderColor": "#17B582",
                  "borderRadius": 16,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                üôè Pray
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`The PrayerView component should render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              bordered={false}
              disabled={true}
              pill={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#17B582",
                  "borderColor": "#17B582",
                  "borderRadius": 16,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                üôè Pray
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`The PrayerView component should render a loading state (isLoading) 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 16,
                  "marginHorizontal": 16,
                  "marginVertical": 12,
                  "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 16,
                    "overflow": "hidden",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "paddingHorizontal": 24,
                        "paddingVertical": 24,
                      }
                    }
                  >
                    <View
                      hasAvatar={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "paddingBottom": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 72,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={90}
                          bbWidth={90}
                          color="#27272E"
                          height={90}
                          id="Raw"
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          size={90}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              null,
                              Object {
                                "flex": 0,
                                "height": 90,
                                "width": 90,
                              },
                            ]
                          }
                          tintColor="#27272E"
                          vbHeight={256}
                          vbWidth={256}
                          width={90}
                        >
                          <RNSVGGroup
                            fill={
                              Array [
                                0,
                                4278190080,
                              ]
                            }
                            fillOpacity={1}
                            fillRule={1}
                            font={Object {}}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            opacity={1}
                            originX={0}
                            originY={0}
                            propList={Array []}
                            rotation={0}
                            scaleX={1}
                            scaleY={1}
                            skewX={0}
                            skewY={0}
                            stroke={null}
                            strokeDasharray={null}
                            strokeDashoffset={null}
                            strokeLinecap={0}
                            strokeLinejoin={0}
                            strokeMiterlimit={4}
                            strokeOpacity={1}
                            strokeWidth={1}
                            vectorEffect={0}
                            x={0}
                            y={0}
                          >
                            <RNSVGRect
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              height={256}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                              rotation={0}
                              rx={0}
                              ry={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={null}
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={1}
                              vectorEffect={0}
                              width={256}
                              x={0}
                              y={0}
                            />
                            <RNSVGCircle
                              cx={128}
                              cy={96}
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                  "stroke",
                                  "strokeWidth",
                                  "strokeMiterlimit",
                                ]
                              }
                              r={64}
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={
                                Array [
                                  0,
                                  4280756014,
                                ]
                              }
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={10}
                              strokeOpacity={1}
                              strokeWidth={16}
                              vectorEffect={0}
                              x={0}
                              y={0}
                            />
                            <RNSVGPath
                              d="M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002"
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                  "stroke",
                                  "strokeWidth",
                                  "strokeLinecap",
                                  "strokeLinejoin",
                                ]
                              }
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={
                                Array [
                                  0,
                                  4280756014,
                                ]
                              }
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={1}
                              strokeLinejoin={1}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={16}
                              vectorEffect={0}
                              x={0}
                              y={0}
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                    <Text
                      style={
                        Object {
                          "color": "#27272E",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 16,
                          "lineHeight": 24,
                        }
                      }
                    >
                      Add your prayer
                    </Text>
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "paddingBottom": 10,
                            "paddingTop": 16,
                          }
                        }
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={24}
                          bbWidth={24}
                          color="#27272E"
                          height={24}
                          id="Raw"
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          size={24}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              null,
                              Object {
                                "flex": 0,
                                "height": 24,
                                "width": 24,
                              },
                            ]
                          }
                          tintColor="#27272E"
                          vbHeight={256}
                          vbWidth={256}
                          width={24}
                        >
                          <RNSVGGroup
                            fill={
                              Array [
                                0,
                                4278190080,
                              ]
                            }
                            fillOpacity={1}
                            fillRule={1}
                            font={Object {}}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            opacity={1}
                            originX={0}
                            originY={0}
                            propList={Array []}
                            rotation={0}
                            scaleX={1}
                            scaleY={1}
                            skewX={0}
                            skewY={0}
                            stroke={null}
                            strokeDasharray={null}
                            strokeDashoffset={null}
                            strokeLinecap={0}
                            strokeLinejoin={0}
                            strokeMiterlimit={4}
                            strokeOpacity={1}
                            strokeWidth={1}
                            vectorEffect={0}
                            x={0}
                            y={0}
                          >
                            <RNSVGRect
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              height={256}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                              rotation={0}
                              rx={0}
                              ry={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={null}
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={1}
                              vectorEffect={0}
                              width={256}
                              x={0}
                              y={0}
                            />
                            <RNSVGCircle
                              cx={128}
                              cy={128}
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                  "stroke",
                                  "strokeWidth",
                                  "strokeMiterlimit",
                                ]
                              }
                              r={96}
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={
                                Array [
                                  0,
                                  4280756014,
                                ]
                              }
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={10}
                              strokeOpacity={1}
                              strokeWidth={16}
                              vectorEffect={0}
                              x={0}
                              y={0}
                            />
                            <RNSVGLine
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                  "stroke",
                                  "strokeWidth",
                                  "strokeLinecap",
                                  "strokeLinejoin",
                                ]
                              }
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={
                                Array [
                                  0,
                                  4280756014,
                                ]
                              }
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={1}
                              strokeLinejoin={1}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={16}
                              vectorEffect={0}
                              x={0}
                              x1={88}
                              x2={168}
                              y={0}
                              y1={128}
                              y2={128}
                            />
                            <RNSVGLine
                              fill={null}
                              fillOpacity={1}
                              fillRule={1}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                  "stroke",
                                  "strokeWidth",
                                  "strokeLinecap",
                                  "strokeLinejoin",
                                ]
                              }
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={
                                Array [
                                  0,
                                  4280756014,
                                ]
                              }
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={1}
                              strokeLinejoin={1}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={16}
                              vectorEffect={0}
                              x={0}
                              x1={128}
                              x2={128}
                              y={0}
                              y1={88}
                              y2={168}
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                        <Text
                          bold={false}
                          italic={false}
                          style={
                            Object {
                              "color": "#27272E",
                              "fontFamily": "InterUI-Regular",
                              "fontSize": 16,
                              "lineHeight": 26,
                            }
                          }
                        >
                          I need prayer for...
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                bordered={true}
                disabled={false}
                pill={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderColor": "#17B582",
                    "borderRadius": 16,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "height": 48,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                    "paddingHorizontal": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#17B582",
                      "fontFamily": "InterUI-Medium",
                      "fontSize": 14,
                      "lineHeight": 21,
                    }
                  }
                >
                  How to Pray
                </Text>
              </View>
            </View>
            <View
              bordered={false}
              disabled={true}
              pill={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#17B582",
                  "borderColor": "#17B582",
                  "borderRadius": 16,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                üôè Pray
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`The PrayerView component should render with children 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text>
              Boom
            </Text>
          </View>
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              bordered={false}
              disabled={true}
              pill={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#17B582",
                  "borderColor": "#17B582",
                  "borderRadius": 16,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                üôè Pray
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`The PrayerView component should render with custom primaryActionText 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              bordered={false}
              disabled={true}
              pill={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#17B582",
                  "borderColor": "#17B582",
                  "borderRadius": 16,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                Custom primaryActionText
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`The PrayerView component should render with custom secondaryActionText 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardDismissMode="on-drag"
        keyboardShouldPersistTaps="never"
      >
        <View>
          <View
            style={
              Object {
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          />
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              bordered={false}
              disabled={true}
              pill={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#17B582",
                  "borderColor": "#17B582",
                  "borderRadius": 16,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                üôè Pray
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

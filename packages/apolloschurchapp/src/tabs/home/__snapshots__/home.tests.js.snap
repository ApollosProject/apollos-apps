// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`User Home Feed Query should return correct query results 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4294967295,
          4294506484,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "flex": 1,
          "height": "100%",
        }
      }
    >
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <RCTScrollView
          ListHeaderComponent={
            <React.Fragment>
              <mapProps(getContext(mapProps(withPropsOnChange(mapProps(Component)))))
                source={
                  Object {
                    "testUri": "../../../src/tabs/home/wordmark.png",
                  }
                }
              />
              <LiveNowButton />
              <Query
                fetchPolicy="cache-and-network"
                query={
                  Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "getPersonaFeed",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "first",
                                  },
                                  "value": Object {
                                    "kind": "IntValue",
                                    "value": "4",
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "personaFeed",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "edges",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "node",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "directives": Array [],
                                                "kind": "FragmentSpread",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "largeCardFragment",
                                                },
                                              },
                                              Object {
                                                "directives": Array [],
                                                "kind": "FragmentSpread",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "contentItemFragment",
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                      Object {
                        "directives": Array [],
                        "kind": "FragmentDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "contentItemFragment",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "title",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "isLiked",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "likedCount",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "summary",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "coverImage",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "sources",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "uri",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "theme",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "type",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "colors",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "primary",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "secondary",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "screen",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "paper",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "parentChannel",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "videos",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "sources",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "uri",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "audios",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "sources",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "uri",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "typeCondition": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ContentItem",
                          },
                        },
                      },
                      Object {
                        "directives": Array [],
                        "kind": "FragmentDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "largeCardFragment",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "directives": Array [],
                              "kind": "FragmentSpread",
                              "name": Object {
                                "kind": "Name",
                                "value": "baseCardFragment",
                              },
                            },
                          ],
                        },
                        "typeCondition": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ContentItem",
                          },
                        },
                      },
                      Object {
                        "directives": Array [],
                        "kind": "FragmentDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "baseCardFragment",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "__typename",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "directives": Array [],
                              "kind": "FragmentSpread",
                              "name": Object {
                                "kind": "Name",
                                "value": "contentCardMetricsFragment",
                              },
                            },
                            Object {
                              "directives": Array [],
                              "kind": "FragmentSpread",
                              "name": Object {
                                "kind": "Name",
                                "value": "coverImageFragment",
                              },
                            },
                            Object {
                              "directives": Array [],
                              "kind": "FragmentSpread",
                              "name": Object {
                                "kind": "Name",
                                "value": "themeFragment",
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "title",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "summary",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                        "typeCondition": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ContentItem",
                          },
                        },
                      },
                      Object {
                        "directives": Array [],
                        "kind": "FragmentDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "contentCardMetricsFragment",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "isLiked",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "likedCount",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                        "typeCondition": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ContentItem",
                          },
                        },
                      },
                      Object {
                        "directives": Array [],
                        "kind": "FragmentDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "coverImageFragment",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "coverImage",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "sources",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "uri",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "typeCondition": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ContentItem",
                          },
                        },
                      },
                      Object {
                        "directives": Array [],
                        "kind": "FragmentDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "themeFragment",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "theme",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "type",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "colors",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "primary",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "secondary",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "screen",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "paper",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "typeCondition": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ContentItem",
                          },
                        },
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 1253,
                      "start": 0,
                    },
                  }
                }
              >
                [Function]
              </Query>
            </React.Fragment>
          }
          contentContainerStyle={
            Object {
              "paddingVertical": 7.2,
            }
          }
          data={
            Array [
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId0",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId1",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId2",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId3",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId4",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId5",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId6",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId7",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId8",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
              Object {
                "channelType": "",
                "coverImage": Array [],
                "id": "fakeId9",
                "isLoading": true,
                "parentChannel": Object {
                  "id": "",
                  "name": "",
                },
                "title": "",
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReached={[Function]}
          onEndReachedThreshold={0.7}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onPressItem={[Function]}
          onRefresh={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={true}
            />
          }
          refreshing={true}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <RCTRefreshControl />
          <View>
            <View
              onLayout={[Function]}
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../src/tabs/home/wordmark.png",
                  }
                }
                style={
                  Object {
                    "alignSelf": "center",
                    "height": 16,
                    "margin": 16,
                    "resizeMode": "contain",
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 16,
                    "marginHorizontal": 16,
                    "marginVertical": 12,
                    "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 6,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "aspectRatio": undefined,
                      "borderRadius": 16,
                      "overflow": "hidden",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "paddingHorizontal": 16,
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 12,
                          "marginVertical": 2.6400000000000006,
                          "width": "50%",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 24,
                          "marginVertical": 1.8000000000000007,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderBottomWidth": 0,
                        "borderColor": "rgba(165, 165, 165, 0.30000000000000004)",
                        "borderLeftWidth": 0,
                        "borderRightWidth": 0,
                        "borderTopWidth": 0,
                        "marginBottom": 16,
                      }
                    }
                  />
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId0"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId1"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId2"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId3"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId4"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId5"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId6"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId7"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId8"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  channelType=""
                  id="fakeId9"
                  parentChannel={
                    Object {
                      "id": "",
                      "name": "",
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 16,
                      "marginHorizontal": 16,
                      "marginVertical": 12,
                      "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 6,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": undefined,
                        "borderRadius": 16,
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 2,
                          "backgroundColor": "#A5A5A5",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <Image
                        onLoad={[Function]}
                        source={Array []}
                        style={
                          Object {
                            "aspectRatio": 2,
                            "backgroundColor": "#A5A5A5",
                            "opacity": 1,
                            "resizeMode": "cover",
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "paddingBottom": 12,
                          "paddingHorizontal": 16,
                          "paddingTop": 24,
                          "paddingVertical": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 24,
                            "marginVertical": 1.8000000000000007,
                            "width": "100%",
                          }
                        }
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#A5A5A5",
                            "borderRadius": 16,
                            "height": 16,
                            "marginVertical": 5,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "height": 32,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                        }
                      }
                    />
                    <View
                      floating={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "flexDirection": "row",
                          "flexWrap": "wrap",
                          "justifyContent": "space-between",
                          "left": 0,
                          "paddingHorizontal": 16,
                          "paddingTop": 4,
                          "paddingVertical": 16,
                          "position": "absolute",
                          "right": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "column",
                          }
                        }
                      >
                        <View
                          flexed={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": null,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 19.2,
                                "width": 19.2,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 4,
                              }
                            }
                            withIcon="empty"
                          >
                            <View
                              style={
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#A5A5A5",
                                  "borderRadius": 16,
                                  "height": 12,
                                  "marginVertical": 2.6400000000000006,
                                  "width": "50%",
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </BVLinearGradient>
  </View>
</RCTSafeAreaView>
`;

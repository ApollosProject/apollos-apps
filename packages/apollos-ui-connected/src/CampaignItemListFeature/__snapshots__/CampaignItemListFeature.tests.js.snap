// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The CampaignItemListFeature component should render 1`] = `
<RCTScrollView
  ListHeaderComponent={null}
  data={
    Array [
      Object {
        "__typename": "CardListItem",
        "action": "READ_CONTENT",
        "actionIcon": null,
        "coverImage": Array [
          Object {
            "uri": "https://picsum.photos/800",
          },
        ],
        "hasAction": null,
        "labelText": null,
        "relatedNode": Object {
          "__typename": "UniversalContentItem",
          "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
        },
        "summary": "Card summary",
        "title": "Card Title",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={0.7}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 16,
              "marginHorizontal": 16,
              "marginVertical": 12,
              "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgb(249, 249, 251)",
                  "bottom": 0,
                  "flex": 1,
                  "height": "100%",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Image
                blurRadius={80}
                fadeDuration={250}
                onLoad={[Function]}
                source={
                  Array [
                    Object {
                      "cache": "force-cache",
                      "uri": "https://picsum.photos/800",
                    },
                  ]
                }
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                material="regular"
                style={
                  Object {
                    "backgroundColor": "rgba(242, 242, 247, 0.8)",
                    "bottom": 0,
                    "flex": 1,
                    "height": "100%",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <Image
              fadeDuration={250}
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/800",
                  },
                ]
              }
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "paddingHorizontal": 20,
                  "paddingVertical": 16,
                  "width": "100%",
                }
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Object {
                    "color": "#27272E",
                    "fontFamily": "InterUI-Black",
                    "fontSize": 24,
                    "lineHeight": 27.6,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#27272E",
                    }
                  }
                >
                  Card Title
                </Text>
              </Text>
              <Text
                bold={false}
                italic={false}
                numberOfLines={3}
                style={
                  Object {
                    "color": "#27272E",
                    "fontFamily": "InterUI-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "rgba(39, 39, 46, 0.6)",
                    }
                  }
                >
                  Card summary
                </Text>
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`The CampaignItemListFeature component should render a loading state for isLoading 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <mapProps(Component)
      vertical={false}
    >
      <FeatureTitles
        isLoading={true}
      />
    </mapProps(Component)>
  }
  data={
    Array [
      Object {
        "__typename": "",
        "action": "",
        "actionIcon": "umbrella",
        "coverImage": Array [
          Object {
            "uri": "",
          },
        ],
        "hasAction": true,
        "isLoading": true,
        "labelText": "",
        "relatedNode": Object {
          "__typename": "",
          "id": "",
        },
        "summary": "",
        "title": "",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={0.7}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshing={true}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 8,
            "paddingHorizontal": 16,
            "paddingTop": 48,
            "paddingVertical": 0,
          }
        }
        vertical={false}
      >
        <View />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          isLoading={true}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 16,
              "marginHorizontal": 16,
              "marginVertical": 12,
              "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgb(249, 249, 251)",
                  "bottom": 0,
                  "flex": 1,
                  "height": "100%",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Image
                blurRadius={80}
                fadeDuration={250}
                onLoad={[Function]}
                source={
                  Array [
                    Object {
                      "cache": "force-cache",
                      "uri": "",
                    },
                  ]
                }
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                material="regular"
                style={
                  Object {
                    "backgroundColor": "rgba(242, 242, 247, 0.8)",
                    "bottom": 0,
                    "flex": 1,
                    "height": "100%",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <Image
              fadeDuration={250}
              isLoading={true}
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "",
                  },
                ]
              }
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "paddingHorizontal": 20,
                  "paddingVertical": 16,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 0,
                      "marginRight": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "width": 32,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": null,
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignSelf": "stretch",
                    "backgroundColor": "#A5A5A5",
                    "borderRadius": 16,
                    "height": 24,
                    "marginVertical": 1.8000000000000007,
                    "width": "100%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "alignSelf": "stretch",
                    "backgroundColor": "#A5A5A5",
                    "borderRadius": 16,
                    "height": 16,
                    "marginVertical": 5,
                    "width": "100%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`The CampaignItemListFeature component should render a section title 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <mapProps(Component)
      vertical={false}
    >
      <FeatureTitles
        title="This renders smaller than its name would suggest"
      />
    </mapProps(Component)>
  }
  data={
    Array [
      Object {
        "__typename": "CardListItem",
        "action": "READ_CONTENT",
        "actionIcon": null,
        "coverImage": Array [
          Object {
            "uri": "https://picsum.photos/800",
          },
        ],
        "hasAction": null,
        "labelText": null,
        "relatedNode": Object {
          "__typename": "UniversalContentItem",
          "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
        },
        "summary": "Card summary",
        "title": "Card Title",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={0.7}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 8,
            "paddingHorizontal": 16,
            "paddingTop": 48,
            "paddingVertical": 0,
          }
        }
        vertical={false}
      >
        <View>
          <Text
            primary={true}
            style={
              Object {
                "color": "#27272E",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            This renders smaller than its name would suggest
          </Text>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 16,
              "marginHorizontal": 16,
              "marginVertical": 12,
              "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgb(249, 249, 251)",
                  "bottom": 0,
                  "flex": 1,
                  "height": "100%",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Image
                blurRadius={80}
                fadeDuration={250}
                onLoad={[Function]}
                source={
                  Array [
                    Object {
                      "cache": "force-cache",
                      "uri": "https://picsum.photos/800",
                    },
                  ]
                }
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                material="regular"
                style={
                  Object {
                    "backgroundColor": "rgba(242, 242, 247, 0.8)",
                    "bottom": 0,
                    "flex": 1,
                    "height": "100%",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <Image
              fadeDuration={250}
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/800",
                  },
                ]
              }
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "paddingHorizontal": 20,
                  "paddingVertical": 16,
                  "width": "100%",
                }
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Object {
                    "color": "#27272E",
                    "fontFamily": "InterUI-Black",
                    "fontSize": 24,
                    "lineHeight": 27.6,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#27272E",
                    }
                  }
                >
                  Card Title
                </Text>
              </Text>
              <Text
                bold={false}
                italic={false}
                numberOfLines={3}
                style={
                  Object {
                    "color": "#27272E",
                    "fontFamily": "InterUI-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "rgba(39, 39, 46, 0.6)",
                    }
                  }
                >
                  Card summary
                </Text>
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`The CampaignItemListFeature component should render with a subtitle 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <mapProps(Component)
      vertical={false}
    >
      <FeatureTitles
        subtitle="This renders larger than you might expect"
      />
    </mapProps(Component)>
  }
  data={
    Array [
      Object {
        "__typename": "CardListItem",
        "action": "READ_CONTENT",
        "actionIcon": null,
        "coverImage": Array [
          Object {
            "uri": "https://picsum.photos/800",
          },
        ],
        "hasAction": null,
        "labelText": null,
        "relatedNode": Object {
          "__typename": "UniversalContentItem",
          "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
        },
        "summary": "Card summary",
        "title": "Card Title",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={0.7}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 8,
            "paddingHorizontal": 16,
            "paddingTop": 48,
            "paddingVertical": 0,
          }
        }
        vertical={false}
      >
        <View>
          <Text
            secondary={true}
            style={
              Object {
                "color": "rgba(39, 39, 46, 0.6)",
                "fontFamily": "InterUI-Bold",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            This renders larger than you might expect
          </Text>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 16,
              "marginHorizontal": 16,
              "marginVertical": 12,
              "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgb(249, 249, 251)",
                  "bottom": 0,
                  "flex": 1,
                  "height": "100%",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Image
                blurRadius={80}
                fadeDuration={250}
                onLoad={[Function]}
                source={
                  Array [
                    Object {
                      "cache": "force-cache",
                      "uri": "https://picsum.photos/800",
                    },
                  ]
                }
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                material="regular"
                style={
                  Object {
                    "backgroundColor": "rgba(242, 242, 247, 0.8)",
                    "bottom": 0,
                    "flex": 1,
                    "height": "100%",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <Image
              fadeDuration={250}
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/800",
                  },
                ]
              }
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "paddingHorizontal": 20,
                  "paddingVertical": 16,
                  "width": "100%",
                }
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Object {
                    "color": "#27272E",
                    "fontFamily": "InterUI-Black",
                    "fontSize": 24,
                    "lineHeight": 27.6,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#27272E",
                    }
                  }
                >
                  Card Title
                </Text>
              </Text>
              <Text
                bold={false}
                italic={false}
                numberOfLines={3}
                style={
                  Object {
                    "color": "#27272E",
                    "fontFamily": "InterUI-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "rgba(39, 39, 46, 0.6)",
                    }
                  }
                >
                  Card summary
                </Text>
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

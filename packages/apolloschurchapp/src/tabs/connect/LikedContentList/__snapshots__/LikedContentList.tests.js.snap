// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LikedContentList component renders LikedContentList 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294967295,
      4294506484,
    ]
  }
  endPoint={
    Object {
      "x": 0.5,
      "y": 1,
    }
  }
  locations={null}
  startPoint={
    Object {
      "x": 0.5,
      "y": 0,
    }
  }
  style={
    Object {
      "flex": 1,
      "height": "100%",
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <Err
        error={
          [Error: Network error: No more mocked responses for the query: query getAllLikedContent($first: Int, $after: String) {
  likedContent(first: $first, after: $after) {
    pageInfo {
      endCursor
      __typename
    }
    edges {
      node {
        ... on ContentItem {
          ...contentItemFragment
          ...largeCardFragment
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment contentItemFragment on ContentItem {
  id
  title
  isLiked
  likedCount
  summary
  coverImage {
    name
    sources {
      uri
      __typename
    }
    __typename
  }
  theme {
    type
    colors {
      primary
      secondary
      screen
      paper
      __typename
    }
    __typename
  }
  parentChannel {
    id
    name
    __typename
  }
  videos {
    sources {
      uri
      __typename
    }
    __typename
  }
  audios {
    sources {
      uri
      __typename
    }
    __typename
  }
  ... on WeekendContentItem {
    liveStream {
      isLive
      __typename
    }
    __typename
  }
  __typename
}

fragment largeCardFragment on ContentItem {
  ...baseCardFragment
  __typename
}

fragment baseCardFragment on ContentItem {
  id
  __typename
  ...coverImageFragment
  ...themeFragment
  title
  summary
  isLiked
  ... on MediaContentItem {
    videos {
      sources {
        uri
        __typename
      }
      __typename
    }
    __typename
  }
  ... on WeekendContentItem {
    videos {
      sources {
        uri
        __typename
      }
      __typename
    }
    liveStream {
      isLive
      __typename
    }
    parentChannel {
      id
      name
      __typename
    }
    __typename
  }
  ... on DevotionalContentItem {
    parentChannel {
      id
      name
      __typename
    }
    __typename
  }
}

fragment coverImageFragment on ContentItem {
  coverImage {
    sources {
      uri
      __typename
    }
    __typename
  }
  __typename
}

fragment themeFragment on ContentItem {
  theme {
    type
    colors {
      primary
      secondary
      screen
      paper
      __typename
    }
    __typename
  }
  __typename
}
, variables: {"first":20}]
        }
      />
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.7}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onPressItem={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 6,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 23.04,
                  "textAlign": "center",
                }
              }
            >
              Uh oh!
            </Text>
            <Text
              style={
                Object {
                  "color": "#505050",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 12,
                  "lineHeight": 17.28,
                  "textAlign": "center",
                }
              }
            >
              Network error: No more mocked responses for the query: query getAllLikedContent($first: Int, $after: String) {
  likedContent(first: $first, after: $after) {
    pageInfo {
      endCursor
      __typename
    }
    edges {
      node {
        ... on ContentItem {
          ...contentItemFragment
          ...largeCardFragment
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment contentItemFragment on ContentItem {
  id
  title
  isLiked
  likedCount
  summary
  coverImage {
    name
    sources {
      uri
      __typename
    }
    __typename
  }
  theme {
    type
    colors {
      primary
      secondary
      screen
      paper
      __typename
    }
    __typename
  }
  parentChannel {
    id
    name
    __typename
  }
  videos {
    sources {
      uri
      __typename
    }
    __typename
  }
  audios {
    sources {
      uri
      __typename
    }
    __typename
  }
  ... on WeekendContentItem {
    liveStream {
      isLive
      __typename
    }
    __typename
  }
  __typename
}

fragment largeCardFragment on ContentItem {
  ...baseCardFragment
  __typename
}

fragment baseCardFragment on ContentItem {
  id
  __typename
  ...coverImageFragment
  ...themeFragment
  title
  summary
  isLiked
  ... on MediaContentItem {
    videos {
      sources {
        uri
        __typename
      }
      __typename
    }
    __typename
  }
  ... on WeekendContentItem {
    videos {
      sources {
        uri
        __typename
      }
      __typename
    }
    liveStream {
      isLive
      __typename
    }
    parentChannel {
      id
      name
      __typename
    }
    __typename
  }
  ... on DevotionalContentItem {
    parentChannel {
      id
      name
      __typename
    }
    __typename
  }
}

fragment coverImageFragment on ContentItem {
  coverImage {
    sources {
      uri
      __typename
    }
    __typename
  }
  __typename
}

fragment themeFragment on ContentItem {
  theme {
    type
    colors {
      primary
      secondary
      screen
      paper
      __typename
    }
    __typename
  }
  __typename
}
, variables: {"first":20}
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</BVLinearGradient>
`;

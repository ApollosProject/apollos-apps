// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ModalView/ModalViewHeader component should render a back button 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "height": 75,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      left={true}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": Object {
            "color": Array [
              48,
              48,
              48,
            ],
            "model": "rgb",
            "valpha": 0.9,
          },
          "borderRadius": 28,
          "height": 28,
          "justifyContent": "center",
          "left": 24,
          "position": "absolute",
          "right": null,
          "top": 24,
          "width": 28,
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          iconPadding={28}
          style={
            Object {
              "padding": 28,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="16"
            bbWidth="16"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
                Object {
                  "opacity": 1,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGPath
              d="M14.35 21L6.2 12.46c-.26-.28-.26-.64 0-.92L14.34 3l1.65.9L8.27 12 16 20.1l-1.65.9z"
              fill={
                Array [
                  0,
                  0.6470588235294118,
                  0.6470588235294118,
                  0.6470588235294118,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The ModalView/ModalViewHeader component should render a close button 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "height": 75,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      right={true}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": Object {
            "color": Array [
              48,
              48,
              48,
            ],
            "model": "rgb",
            "valpha": 0.9,
          },
          "borderRadius": 28,
          "height": 28,
          "justifyContent": "center",
          "left": null,
          "position": "absolute",
          "right": 24,
          "top": 24,
          "width": 28,
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          iconPadding={28}
          style={
            Object {
              "padding": 28,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="16"
            bbWidth="16"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
                Object {
                  "opacity": 1,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGPath
              d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
              fill={
                Array [
                  0,
                  0.6470588235294118,
                  0.6470588235294118,
                  0.6470588235294118,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The ModalView/ModalViewHeader component should render both buttons 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "height": 75,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      left={true}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": Object {
            "color": Array [
              48,
              48,
              48,
            ],
            "model": "rgb",
            "valpha": 0.9,
          },
          "borderRadius": 28,
          "height": 28,
          "justifyContent": "center",
          "left": 24,
          "position": "absolute",
          "right": null,
          "top": 24,
          "width": 28,
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          iconPadding={28}
          style={
            Object {
              "padding": 28,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="16"
            bbWidth="16"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
                Object {
                  "opacity": 1,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGPath
              d="M14.35 21L6.2 12.46c-.26-.28-.26-.64 0-.92L14.34 3l1.65.9L8.27 12 16 20.1l-1.65.9z"
              fill={
                Array [
                  0,
                  0.6470588235294118,
                  0.6470588235294118,
                  0.6470588235294118,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <View
      right={true}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": Object {
            "color": Array [
              48,
              48,
              48,
            ],
            "model": "rgb",
            "valpha": 0.9,
          },
          "borderRadius": 28,
          "height": 28,
          "justifyContent": "center",
          "left": null,
          "position": "absolute",
          "right": 24,
          "top": 24,
          "width": 28,
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          iconPadding={28}
          style={
            Object {
              "padding": 28,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="16"
            bbWidth="16"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
                Object {
                  "opacity": 1,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGPath
              d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
              fill={
                Array [
                  0,
                  0.6470588235294118,
                  0.6470588235294118,
                  0.6470588235294118,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The DateInput component should render 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          bordered={false}
          disabled={false}
          pill={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#A5A5A5",
              "borderColor": "#A5A5A5",
              "borderRadius": 8,
              "borderWidth": 2,
              "elevation": 2,
              "flexDirection": "row",
              "height": 32,
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "marginTop": 5,
              "opacity": 1,
              "overflow": "hidden",
              "paddingHorizontal": 4,
              "paddingVertical": 4,
            }
          }
        />
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onRequestClose={[Function]}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          pointerEvents="box-none"
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "margin": 10,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 13,
                  "marginBottom": 8,
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#d5d5d5",
                  "borderBottomWidth": 0.5,
                  "padding": 14,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8f8f8f",
                      "fontSize": 13,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Pick a date
              </Text>
            </View>
            <View
              onStartShouldSetResponderCapture={[Function]}
            >
              <View>
                <RCTDatePicker
                  date={1420070400000}
                  minuteInterval={1}
                  mode="date"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 216,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#d5d5d5",
                  "borderTopWidth": 0.5,
                  "height": 57,
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#007ff9",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "height": 57,
                "justifyContent": "center",
                "marginBottom": 0,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 10,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </Modal>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The DateInput component should render with a displayValue 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          bordered={false}
          disabled={false}
          pill={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#A5A5A5",
              "borderColor": "#A5A5A5",
              "borderRadius": 8,
              "borderWidth": 2,
              "elevation": 2,
              "flexDirection": "row",
              "height": 32,
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "marginTop": 5,
              "opacity": 1,
              "overflow": "hidden",
              "paddingHorizontal": 4,
              "paddingVertical": 4,
            }
          }
        >
          <Text
            style={
              Object {
                "alignItems": "center",
                "color": "#303030",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "justifyContent": "center",
                "lineHeight": 17.28,
                "paddingHorizontal": 6,
                "textAlign": "center",
              }
            }
          >
            2015/01/01
          </Text>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onRequestClose={[Function]}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          pointerEvents="box-none"
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "margin": 10,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 13,
                  "marginBottom": 8,
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#d5d5d5",
                  "borderBottomWidth": 0.5,
                  "padding": 14,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8f8f8f",
                      "fontSize": 13,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Pick a date
              </Text>
            </View>
            <View
              onStartShouldSetResponderCapture={[Function]}
            >
              <View>
                <RCTDatePicker
                  date={1420070400000}
                  minuteInterval={1}
                  mode="date"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 216,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#d5d5d5",
                  "borderTopWidth": 0.5,
                  "height": 57,
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#007ff9",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "height": 57,
                "justifyContent": "center",
                "marginBottom": 0,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 10,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </Modal>
      <View
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "bottom": 0,
            "justifyContent": "center",
            "opacity": 0.8,
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0.8,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#505050",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "lineHeight": 17.28,
              "paddingVertical": 4,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The DateInput component should render with a label 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          bordered={false}
          disabled={false}
          pill={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#A5A5A5",
              "borderColor": "#A5A5A5",
              "borderRadius": 8,
              "borderWidth": 2,
              "elevation": 2,
              "flexDirection": "row",
              "height": 32,
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "marginTop": 5,
              "opacity": 1,
              "overflow": "hidden",
              "paddingHorizontal": 4,
              "paddingVertical": 4,
            }
          }
        >
          <Text
            style={
              Object {
                "alignItems": "center",
                "color": "#303030",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "justifyContent": "center",
                "lineHeight": 17.28,
                "paddingHorizontal": 6,
                "textAlign": "center",
              }
            }
          >
            2015/01/01
          </Text>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onRequestClose={[Function]}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          pointerEvents="box-none"
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "margin": 10,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 13,
                  "marginBottom": 8,
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#d5d5d5",
                  "borderBottomWidth": 0.5,
                  "padding": 14,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8f8f8f",
                      "fontSize": 13,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Pick a date
              </Text>
            </View>
            <View
              onStartShouldSetResponderCapture={[Function]}
            >
              <View>
                <RCTDatePicker
                  date={1420070400000}
                  minuteInterval={1}
                  mode="date"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 216,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#d5d5d5",
                  "borderTopWidth": 0.5,
                  "height": 57,
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#007ff9",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "height": 57,
                "justifyContent": "center",
                "marginBottom": 0,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 10,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </Modal>
      <View
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "bottom": 0,
            "justifyContent": "center",
            "opacity": 0.8,
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0.8,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#505050",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "lineHeight": 17.28,
              "paddingVertical": 4,
            }
          }
        >
          Date Label
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The DateInput component should render with a placeholder 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          bordered={false}
          disabled={false}
          pill={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#A5A5A5",
              "borderColor": "#A5A5A5",
              "borderRadius": 8,
              "borderWidth": 2,
              "elevation": 2,
              "flexDirection": "row",
              "height": 32,
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "marginTop": 5,
              "opacity": 1,
              "overflow": "hidden",
              "paddingHorizontal": 4,
              "paddingVertical": 4,
            }
          }
        >
          <Text
            style={
              Object {
                "alignItems": "center",
                "color": "#303030",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "justifyContent": "center",
                "lineHeight": 17.28,
                "paddingHorizontal": 6,
                "textAlign": "center",
              }
            }
          >
            mm/dd/yyyy
          </Text>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onRequestClose={[Function]}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          pointerEvents="box-none"
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "margin": 10,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 13,
                  "marginBottom": 8,
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#d5d5d5",
                  "borderBottomWidth": 0.5,
                  "padding": 14,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8f8f8f",
                      "fontSize": 13,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Pick a date
              </Text>
            </View>
            <View
              onStartShouldSetResponderCapture={[Function]}
            >
              <View>
                <RCTDatePicker
                  date={1420070400000}
                  minuteInterval={1}
                  mode="date"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 216,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#d5d5d5",
                  "borderTopWidth": 0.5,
                  "height": 57,
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#007ff9",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "height": 57,
                "justifyContent": "center",
                "marginBottom": 0,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 10,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </Modal>
      <View
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "bottom": 0,
            "justifyContent": "center",
            "opacity": 0.8,
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0.8,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#505050",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "lineHeight": 17.28,
              "paddingVertical": 4,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

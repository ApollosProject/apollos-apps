// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The VerticalCardListFeatureConnected component should not render as a featured card without cards 1`] = `null`;

exports[`The VerticalCardListFeatureConnected component should not render without cards 1`] = `null`;

exports[`The VerticalCardListFeatureConnected component should render 1`] = `
<View>
  <View
    style={
      Object {
        "paddingBottom": 8,
        "paddingHorizontal": 16,
        "paddingTop": 48,
        "paddingVertical": 0,
      }
    }
    vertical={false}
  >
    <Text
      style={
        Object {
          "color": "#303030",
          "fontFamily": "InterUI-Black",
          "fontSize": 36,
          "lineHeight": 41.4,
        }
      }
    >
      Check it out
    </Text>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "__typename": "UniversalContentItem",
          "action": "READ_CONTENT",
          "coverImage": Array [
            Object {
              "__typename": "ImageMediaSource",
              "uri": "https://picsum.photos/200/200",
            },
          ],
          "hasAction": false,
          "id": "UniversalContentItem:123",
          "labelText": "What",
          "relatedNode": Object {
            "__typename": "UniversalContentItem",
            "id": "UniversalContentItem:123",
          },
          "summary": "Read",
          "title": "Boom",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    loadingStateObject={
      Object {
        "__typename": "",
        "action": "",
        "actionIcon": "umbrella",
        "coverImage": Array [
          Object {
            "uri": "",
          },
        ],
        "hasAction": true,
        "isLoading": true,
        "labelText": "",
        "relatedNode": Object {
          "__typename": "",
          "id": "",
        },
        "summary": "boom",
        "title": "",
      }
    }
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={0.7}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "cache": "force-cache",
                        "uri": "https://picsum.photos/200/200",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    bordered={false}
                    disabled={false}
                    pill={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#17B582",
                        "borderColor": "#17B582",
                        "borderRadius": 16,
                        "borderWidth": 2,
                        "elevation": 2,
                        "flexDirection": "row",
                        "height": 32,
                        "justifyContent": "center",
                        "opacity": 1,
                        "overflow": "hidden",
                        "paddingHorizontal": 12,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "alignItems": "center",
                          "color": "#FFFFFF",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 12,
                          "justifyContent": "center",
                          "lineHeight": 18,
                          "textAlign": "center",
                        }
                      }
                    >
                      What
                    </Text>
                  </View>
                </View>
                <Text
                  numberOfLines={2}
                  style={
                    Object {
                      "color": "#303030",
                      "fontFamily": "InterUI-Black",
                      "fontSize": 24,
                      "lineHeight": 27.6,
                    }
                  }
                >
                  Boom
                </Text>
                <Text
                  bold={false}
                  italic={false}
                  numberOfLines={2}
                  style={
                    Object {
                      "color": "#303030",
                      "fontFamily": "InterUI-Regular",
                      "fontSize": 16,
                      "lineHeight": 26,
                      "paddingTop": 16,
                    }
                  }
                >
                  Read
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The VerticalCardListFeatureConnected component should render a featured loading state when isLoading 1`] = `
<View>
  <View
    style={
      Object {
        "paddingBottom": 8,
        "paddingHorizontal": 16,
        "paddingTop": 48,
        "paddingVertical": 0,
      }
    }
    vertical={false}
  >
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#A5A5A5",
          "borderRadius": 16,
          "height": 14,
          "marginVertical": 3.5,
          "width": "60%",
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#A5A5A5",
          "borderRadius": 16,
          "height": 36,
          "marginVertical": 2.6999999999999993,
          "width": "100%",
        }
      }
    />
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={0.7}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={true}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            cardColor="#00676D"
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#00676D",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      1725684697,
                      4292598745,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      0.8,
                    ]
                  }
                  overlayColor="#DBDBD9"
                  overlayType="featured"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "marginTop": "-40%",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 36,
                      "marginVertical": 2.6999999999999993,
                      "width": "100%",
                    }
                  }
                />
                <View
                  hasSummary={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 16,
                          "marginVertical": 5,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 48,
                        "width": 48,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The VerticalCardListFeatureConnected component should render a loading state when isLoading 1`] = `
<View>
  <View
    style={
      Object {
        "paddingBottom": 8,
        "paddingHorizontal": 16,
        "paddingTop": 48,
        "paddingVertical": 0,
      }
    }
    vertical={false}
  >
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#A5A5A5",
          "borderRadius": 16,
          "height": 14,
          "marginVertical": 3.5,
          "width": "60%",
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#A5A5A5",
          "borderRadius": 16,
          "height": 36,
          "marginVertical": 2.6999999999999993,
          "width": "100%",
        }
      }
    />
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId0",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId1",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId2",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId3",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId4",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId5",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId6",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId7",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId8",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
        Object {
          "__typename": "",
          "action": "",
          "actionIcon": "umbrella",
          "coverImage": Array [
            Object {
              "uri": "",
            },
          ],
          "hasAction": true,
          "id": "fakeId9",
          "isLoading": true,
          "labelText": "",
          "relatedNode": Object {
            "__typename": "",
            "id": "",
          },
          "summary": "boom",
          "title": "",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    loadingStateObject={
      Object {
        "__typename": "",
        "action": "",
        "actionIcon": "umbrella",
        "coverImage": Array [
          Object {
            "uri": "",
          },
        ],
        "hasAction": true,
        "isLoading": true,
        "labelText": "",
        "relatedNode": Object {
          "__typename": "",
          "id": "",
        },
        "summary": "boom",
        "title": "",
      }
    }
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.7}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={true}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  isLoading={true}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "cache": "force-cache",
                        "uri": "",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1.2,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                      "marginTop": -32,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "paddingHorizontal": 12,
                        "width": 64,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "alignSelf": "stretch",
                      "backgroundColor": "#A5A5A5",
                      "borderRadius": 16,
                      "height": 16,
                      "marginTop": 16,
                      "marginVertical": 5,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The VerticalCardListFeatureConnected component should render as a featured card 1`] = `
<View>
  <View
    style={
      Object {
        "paddingBottom": 8,
        "paddingHorizontal": 16,
        "paddingTop": 48,
        "paddingVertical": 0,
      }
    }
    vertical={false}
  >
    <Text
      style={
        Object {
          "color": "#303030",
          "fontFamily": "InterUI-Black",
          "fontSize": 36,
          "lineHeight": 41.4,
        }
      }
    >
      Check it out
    </Text>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "__typename": "UniversalContentItem",
          "action": "READ_CONTENT",
          "coverImage": Array [
            Object {
              "__typename": "ImageMediaSource",
              "uri": "https://picsum.photos/200/200",
            },
          ],
          "hasAction": false,
          "id": "UniversalContentItem:123",
          "labelText": "What",
          "relatedNode": Object {
            "__typename": "UniversalContentItem",
            "id": "UniversalContentItem:123",
          },
          "summary": "Read",
          "title": "Boom",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={0.7}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            cardColor="#00676D"
            style={
              Object {
                "backgroundColor": "#00676D",
                "borderRadius": 16,
                "marginHorizontal": 16,
                "marginVertical": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  fadeDuration={250}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "cache": "force-cache",
                        "uri": "https://picsum.photos/200/200",
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      1711302509,
                      4278216557,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      0.8,
                    ]
                  }
                  overlayColor="#00676D"
                  overlayType="featured"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "marginTop": "-40%",
                    "paddingBottom": 32,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  bordered={false}
                  disabled={false}
                  pill={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(255, 255, 255, 0.4)",
                      "borderColor": "rgba(255, 255, 255, 0.4)",
                      "borderRadius": 16,
                      "borderWidth": 0,
                      "elevation": 2,
                      "flexDirection": "row",
                      "height": 32,
                      "justifyContent": "center",
                      "marginBottom": 16,
                      "opacity": 1,
                      "overflow": "hidden",
                      "paddingHorizontal": 12,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "alignItems": "center",
                        "color": "#FFFFFF",
                        "fontFamily": "InterUI-Bold",
                        "fontSize": 12,
                        "justifyContent": "center",
                        "lineHeight": 18,
                        "textAlign": "center",
                      }
                    }
                  >
                    What
                  </Text>
                </View>
                <Text
                  numberOfLines={3}
                  style={
                    Object {
                      "color": "#F8F7F4",
                      "fontFamily": "InterUI-Black",
                      "fontSize": 36,
                      "lineHeight": 41.4,
                    }
                  }
                >
                  Boom
                </Text>
                <View
                  hasSummary={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <Text
                      bold={false}
                      italic={false}
                      numberOfLines={2}
                      style={
                        Object {
                          "color": "#F8F7F4",
                          "fontFamily": "InterUI-Regular",
                          "fontSize": 16,
                          "lineHeight": 26,
                        }
                      }
                    >
                      Read
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the TileImage component passes an onPressItem prop 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "aspectRatio": 1,
            "borderRadius": 16,
            "height": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#A5A5A5",
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            animate={null}
            customAnimate={null}
            onReady={false}
            style={
              Object {
                "aspectRatio": 1,
                "backgroundColor": "#A5A5A5",
                "width": "100%",
              }
            }
          >
            <Image
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/600/400/?random",
                    "url": "https://picsum.photos/600/400/?random",
                  },
                ]
              }
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "opacity": 0,
                  "resizeMode": "cover",
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "bottom": 16,
              "color": "#F8F7F4",
              "fontFamily": "InterUI-Bold",
              "fontSize": 16,
              "left": 16,
              "lineHeight": 23.04,
              "position": "absolute",
              "right": 16,
            }
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`the TileImage component should render 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "aspectRatio": 1,
            "borderRadius": 16,
            "height": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#A5A5A5",
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            animate={null}
            customAnimate={null}
            onReady={false}
            style={
              Object {
                "aspectRatio": 1,
                "backgroundColor": "#A5A5A5",
                "width": "100%",
              }
            }
          >
            <Image
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/600/400/?random",
                    "url": "https://picsum.photos/600/400/?random",
                  },
                ]
              }
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "opacity": 0,
                  "resizeMode": "cover",
                  "width": "100%",
                }
              }
            />
          </View>
          <BVLinearGradient
            colors={
              Array [
                0,
                4278190080,
              ]
            }
            endPoint={
              Object {
                "x": 0,
                "y": 1,
              }
            }
            locations={
              Array [
                0.5,
                1,
              ]
            }
            startPoint={
              Object {
                "x": 0,
                "y": 0,
              }
            }
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "bottom": 16,
              "color": "#F8F7F4",
              "fontFamily": "InterUI-Bold",
              "fontSize": 16,
              "left": 16,
              "lineHeight": 23.04,
              "position": "absolute",
              "right": 16,
            }
          }
        >
          So cool!
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`the TileImage component should render a loading state 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "aspectRatio": 1,
            "borderRadius": 16,
            "height": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#A5A5A5",
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            animate={null}
            customAnimate={null}
            onReady={false}
            style={
              Object {
                "aspectRatio": 1,
                "backgroundColor": "#A5A5A5",
                "width": "100%",
              }
            }
          >
            <Image
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/600/400/?random",
                    "url": "https://picsum.photos/600/400/?random",
                  },
                ]
              }
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "opacity": 0,
                  "resizeMode": "cover",
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#A5A5A5",
              "borderRadius": 16,
              "height": 16,
              "marginVertical": 3.5199999999999996,
              "width": "80%",
            }
          }
        />
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`the TileImage component should render without text 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "aspectRatio": 1,
            "borderRadius": 16,
            "height": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#A5A5A5",
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            animate={null}
            customAnimate={null}
            onReady={false}
            style={
              Object {
                "aspectRatio": 1,
                "backgroundColor": "#A5A5A5",
                "width": "100%",
              }
            }
          >
            <Image
              onLoad={[Function]}
              source={
                Array [
                  Object {
                    "cache": "force-cache",
                    "uri": "https://picsum.photos/600/400/?random",
                    "url": "https://picsum.photos/600/400/?random",
                  },
                ]
              }
              style={
                Object {
                  "backgroundColor": "#A5A5A5",
                  "opacity": 0,
                  "resizeMode": "cover",
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "bottom": 16,
              "color": "#F8F7F4",
              "fontFamily": "InterUI-Bold",
              "fontSize": 16,
              "left": 16,
              "lineHeight": 23.04,
              "position": "absolute",
              "right": 16,
            }
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

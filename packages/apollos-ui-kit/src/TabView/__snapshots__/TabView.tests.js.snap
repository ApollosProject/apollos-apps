// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabView Component renders 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "flex": 1,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "elevation": 4,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0.5,
            },
            "shadowOpacity": 0.1,
            "shadowRadius": 0.5,
            "zIndex": 1,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#6EC5B8",
                "bottom": 0,
                "height": 3,
                "left": 0,
                "position": "absolute",
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
                "width": 375,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "overflow": "scroll",
            }
          }
        >
          <RCTScrollView
            alwaysBounceHorizontal={false}
            automaticallyAdjustContentInsets={false}
            contentContainerStyle={
              Array [
                Object {
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                Object {
                  "flex": 1,
                },
              ]
            }
            horizontal={true}
            keyboardShouldPersistTaps="handled"
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            overScrollMode="never"
            scrollEventThrottle={1}
            scrollsToTop={false}
            showsHorizontalScrollIndicator={false}
          >
            <View>
              <View
                accessibilityLabel="FIRST"
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                        "justifyContent": "center",
                        "opacity": 1,
                        "padding": 8,
                      }
                    }
                  >
                    <Text
                      padded={true}
                      style={
                        Object {
                          "color": "#303030",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 16,
                          "lineHeight": 23.04,
                          "paddingBottom": 11.52,
                          "paddingTop": 15.21,
                        }
                      }
                    >
                      First
                    </Text>
                  </View>
                </View>
              </View>
              <View
                accessibilityLabel="SECOND"
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                        "justifyContent": "center",
                        "opacity": 0.7,
                        "padding": 8,
                      }
                    }
                  >
                    <Text
                      padded={true}
                      style={
                        Object {
                          "color": "#303030",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 16,
                          "lineHeight": 23.04,
                          "paddingBottom": 11.52,
                          "paddingTop": 15.21,
                        }
                      }
                    >
                      Second
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RCTScrollView
          alwaysBounceHorizontal={false}
          automaticallyAdjustContentInsets={false}
          bounces={false}
          contentContainerStyle={null}
          contentOffset={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          directionalLockEnabled={true}
          horizontal={true}
          keyboardDismissMode="on-drag"
          keyboardShouldPersistTaps="always"
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          overScrollMode="never"
          pagingEnabled={true}
          scrollEnabled={true}
          scrollEventThrottle={1}
          scrollsToTop={false}
          showsHorizontalScrollIndicator={false}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View>
            <View
              accessibilityElementsHidden={false}
              importantForAccessibility="auto"
              style={
                Object {
                  "overflow": "hidden",
                  "width": 750,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#ff4081",
                      "flex": 1,
                    },
                  ]
                }
              />
            </View>
            <View
              accessibilityElementsHidden={true}
              importantForAccessibility="no-hide-descendants"
              style={
                Object {
                  "overflow": "hidden",
                  "width": 750,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#673ab7",
                      "flex": 1,
                    },
                  ]
                }
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

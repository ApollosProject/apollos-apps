// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The PrayerScreen component should render 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexGrow": 1,
              "justifyContent": "center",
            }
          }
        />
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            bordered={false}
            disabled={false}
            pill={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#00676D",
                "borderColor": "#00676D",
                "borderRadius": 48,
                "borderWidth": 2,
                "elevation": 2,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The PrayerScreen component should render accept an onPressButton function 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexGrow": 1,
              "justifyContent": "center",
            }
          }
        />
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              bordered={false}
              disabled={false}
              pill={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#00676D",
                  "borderColor": "#00676D",
                  "borderRadius": 48,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 1,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                Pray
              </Text>
            </View>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The PrayerScreen component should render with children 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexGrow": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text>
            Boom
          </Text>
        </View>
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            bordered={false}
            disabled={false}
            pill={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#00676D",
                "borderColor": "#00676D",
                "borderRadius": 48,
                "borderWidth": 2,
                "elevation": 2,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The PrayerScreen component should render with custom buttonText 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexGrow": 1,
              "justifyContent": "center",
            }
          }
        />
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            bordered={false}
            disabled={false}
            pill={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#00676D",
                "borderColor": "#00676D",
                "borderRadius": 48,
                "borderWidth": 2,
                "elevation": 2,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Custom buttonText
            </Text>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>
</View>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FeaturesFeedConnected should render 1`] = `
<RCTScrollView
  ListEmptyComponent={
    <Err
      error={
        [Error: Network error: No more mocked responses for the query: query getFeatureFeed($featureFeedId: ID!) {
  node(id: $featureFeedId) {
    id
    ... on FeatureFeed {
      features {
        ...FeedFeaturesFragment
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment FeedFeaturesFragment on Feature {
  id
  __typename
  ... on VerticalCardListFeature {
    isFeatured
    title
    subtitle
    __typename
  }
  ... on HorizontalCardListFeature {
    title
    subtitle
    __typename
  }
  ... on ActionListFeature {
    title
    subtitle
    __typename
  }
  ... on HeroListFeature {
    title
    subtitle
    __typename
  }
  ... on PrayerListFeature {
    title
    subtitle
    isCard
    __typename
  }
  ...TextFeatureFragment
  ...ScriptureFeatureFragment
  ...WebviewFeatureFragment
}

fragment TextFeatureFragment on TextFeature {
  body
  id
  sharing {
    message
    __typename
  }
  __typename
}

fragment ScriptureFeatureFragment on ScriptureFeature {
  sharing {
    message
    __typename
  }
  scriptures {
    id
    html
    reference
    copyright
    version
    __typename
  }
  __typename
}

fragment WebviewFeatureFragment on WebviewFeature {
  linkText
  title
  url
  __typename
}
, variables: {"featureFeedId":"FeatureFeed:1"}]
      }
      message="Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again."
      showErrorMessage={false}
    />
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  loading={false}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={0.7}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[Function]}
      refreshing={false}
    />
  }
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <RCTRefreshControl />
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 16,
          "marginHorizontal": 16,
          "marginVertical": 12,
          "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 8,
        }
      }
    >
      <View
        style={
          Object {
            "borderRadius": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            flexed={false}
            style={
              Object {
                "alignItems": "center",
                "flex": null,
                "flexDirection": "row",
                "tintColor": "#6EC5B8",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={19.2}
              bbWidth={19.2}
              height={19.2}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  null,
                  Object {
                    "flex": 0,
                    "height": 19,
                    "width": 19,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
              width={19.2}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGPath
                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                  fill={
                    Array [
                      0,
                      4289045925,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              style={
                Object {
                  "paddingHorizontal": 4,
                }
              }
              withIcon="warning"
            >
              <Text
                style={
                  Object {
                    "color": "#A5A5A5",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 12,
                    "lineHeight": 18,
                  }
                }
                tint="#A5A5A5"
              >
                Something went wrong
              </Text>
            </View>
          </View>
          <Text
            style={
              Object {
                "color": "#505050",
                "fontFamily": "InterUI-Bold",
                "fontSize": 12,
                "lineHeight": 18,
              }
            }
          />
          <Text
            bold={false}
            italic={false}
            style={
              Object {
                "color": "#303030",
                "fontFamily": "InterUI-Regular",
                "fontSize": 16,
                "lineHeight": 26,
              }
            }
          >
            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

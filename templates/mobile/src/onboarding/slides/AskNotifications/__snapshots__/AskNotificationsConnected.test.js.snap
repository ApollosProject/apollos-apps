// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Onboarding AskNotificationsConnected component should render as if a user had granted push notifications permissions 1`] = `
<Context.Provider
  value={
    Object {
      "checkPermissions": [Function],
      "hasPrompted": true,
      "hasPushPermission": true,
      "loading": false,
    }
  }
>
  <Unknown
    onPressPrimary={[MockFunction]}
    onRequestPushPermissions={[MockFunction]}
  />
</Context.Provider>
`;

exports[`The Onboarding AskNotificationsConnected component should render with a user not having granted push notifications permissions 1`] = `
<Context.Provider
  value={
    Object {
      "checkPermissions": [Function],
      "hasPrompted": false,
      "hasPushPermission": false,
      "loading": false,
    }
  }
>
  <Unknown
    onPressPrimary={[MockFunction]}
    onRequestPushPermissions={[MockFunction]}
  />
</Context.Provider>
`;

exports[`The Onboarding AskNotificationsConnected component should render with no data in the cache 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "minHeight": "100%",
    }
  }
  overScrollMode="auto"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <SafeAreaView
      style={[Function]}
    >
      <View>
        <View
          style={[Function]}
        >
          <H2
            style={[Function]}
          >
            Can we keep you informed?
          </H2>
        </View>
        <H5
          style={[Function]}
        >
          We'll let you know when important things are happening and keep you in the loop
        </H5>
      </View>
      <PaddedView
        horizontal={false}
      >
        <Button
          disabled={true}
          onPress={[Function]}
          pill={false}
          title="Notifications Enabled!"
        />
      </PaddedView>
    </SafeAreaView>
  </View>
</RCTScrollView>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HighlightCard should render a loading state with isLoading 1`] = `
<View
  cardColor="#00676D"
  isLoading={true}
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        isLoading={true}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#A5A5A5",
            "borderRadius": 16,
            "height": 32,
            "marginBottom": 16,
            "paddingHorizontal": 12,
            "width": 64,
          }
        }
      />
      <View
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#A5A5A5",
            "borderRadius": 16,
            "height": 24,
            "marginVertical": 1.8000000000000007,
            "width": "100%",
          }
        }
      />
      <View
        hasSummary={true}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#A5A5A5",
                "borderRadius": 16,
                "height": 16,
                "marginVertical": 5,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#A5A5A5",
              "borderRadius": 16,
              "height": 48,
              "width": 48,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render in a "tall" aspect ratio (maxAspectRatio) 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render in a "wide" aspect ratio 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/1600/800/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render with a custom actionIcon 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={48}
          bbWidth={48}
          height={48}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              undefined,
              null,
              Object {
                "flex": 0,
                "height": 48,
                "width": 48,
              },
            ]
          }
          vbHeight={32}
          vbWidth={32}
          width={48}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGPath
              d="M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z"
              fill={
                Array [
                  0,
                  4294506484,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render with a custom theme 1`] = `
<View
  cardColor="salmon"
  style={
    Object {
      "backgroundColor": "salmon",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        customTheme={
          Object {
            "colors": Object {
              "primary": "salmon",
            },
          }
        }
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1727692914,
            2163900530,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="salmon"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render with a summary 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <Text
        numberOfLines={3}
        style={
          Object {
            "color": "#F8F7F4",
            "fontFamily": "InterUI-Black",
            "fontSize": 24,
            "lineHeight": 27.6,
          }
        }
      >
        Are you telling me that you built a time machine out of a DeLorean?
      </Text>
      <View
        hasSummary={true}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            bold={false}
            italic={false}
            numberOfLines={2}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Regular",
                "fontSize": 16,
                "lineHeight": 26,
              }
            }
          >
            The way I see it, if you’re going to build a time machine into a car, why not do it with some style?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render with custom LabelComponent 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        bordered={false}
        disabled={false}
        pill={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.4)",
            "borderColor": "rgba(255, 255, 255, 0.4)",
            "borderRadius": 16,
            "borderWidth": 0,
            "elevation": 2,
            "flexDirection": "row",
            "height": 32,
            "justifyContent": "center",
            "opacity": 1,
            "overflow": "hidden",
            "paddingHorizontal": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "alignItems": "center",
              "color": "#FFFFFF",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "justifyContent": "center",
              "lineHeight": 18,
              "textAlign": "center",
            }
          }
        >
          Custom LabelComponent
        </Text>
      </View>
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render with custom labelText 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        bordered={false}
        disabled={false}
        pill={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.4)",
            "borderColor": "rgba(255, 255, 255, 0.4)",
            "borderRadius": 16,
            "borderWidth": 0,
            "elevation": 2,
            "flexDirection": "row",
            "height": 32,
            "justifyContent": "center",
            "opacity": 1,
            "overflow": "hidden",
            "paddingHorizontal": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "alignItems": "center",
              "color": "#FFFFFF",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "justifyContent": "center",
              "lineHeight": 18,
              "textAlign": "center",
            }
          }
        >
          Quote
        </Text>
      </View>
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should render with isLive 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        bordered={false}
        disabled={false}
        pill={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#17B582",
            "borderColor": "#17B582",
            "borderRadius": 16,
            "borderWidth": 2,
            "elevation": 2,
            "flexDirection": "row",
            "height": 32,
            "justifyContent": "center",
            "opacity": 1,
            "overflow": "hidden",
            "paddingHorizontal": 12,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={7}
          bbWidth={7}
          height={7}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "marginRight": 8,
              },
              null,
              Object {
                "flex": 0,
                "height": 7,
                "width": 7,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={7}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGCircle
              cx="12"
              cy="12"
              fill={
                Array [
                  0,
                  4294967295,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              r="12"
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
        <Text
          style={
            Object {
              "alignItems": "center",
              "color": "#FFFFFF",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "justifyContent": "center",
              "lineHeight": 18,
              "textAlign": "center",
            }
          }
        >
          Live
        </Text>
      </View>
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should should render a like icon 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "position": "absolute",
          "right": 24,
          "top": 24,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        height={24}
        iconPadding={24}
        isLiked={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            undefined,
            null,
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        >
          <RNSVGPath
            d="M13.13 20.2h-2.26l1.4-1.4.03-.02.03-.03c6.37-5.6 8.06-7.67 8.06-10.27 0-2.2-1.7-3.9-3.9-3.9-1.23 0-2.48.6-3.28 1.54L12 7.57l-1.23-1.45C9.97 5.18 8.72 4.6 7.5 4.6c-2.2 0-3.9 1.67-3.9 3.88 0 2.6 1.7 4.66 8.07 10.27l.03.03.04.03 1.4 1.4zM10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
            fill={
              Array [
                0,
                4294506484,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should should render as isLiked 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "position": "absolute",
          "right": 24,
          "top": 24,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        height={24}
        iconPadding={24}
        isLiked={true}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            undefined,
            null,
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        >
          <RNSVGPath
            d="M10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
            fill={
              Array [
                0,
                4294506484,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should should render as isLive 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        bordered={false}
        disabled={false}
        pill={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#17B582",
            "borderColor": "#17B582",
            "borderRadius": 16,
            "borderWidth": 2,
            "elevation": 2,
            "flexDirection": "row",
            "height": 32,
            "justifyContent": "center",
            "opacity": 1,
            "overflow": "hidden",
            "paddingHorizontal": 12,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={7}
          bbWidth={7}
          height={7}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "marginRight": 8,
              },
              null,
              Object {
                "flex": 0,
                "height": 7,
                "width": 7,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={7}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGCircle
              cx="12"
              cy="12"
              fill={
                Array [
                  0,
                  4294967295,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              r="12"
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
        <Text
          style={
            Object {
              "alignItems": "center",
              "color": "#FFFFFF",
              "fontFamily": "InterUI-Bold",
              "fontSize": 12,
              "justifyContent": "center",
              "lineHeight": 18,
              "textAlign": "center",
            }
          }
        >
          Live
        </Text>
      </View>
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`HighlightCard should should render with an action "button" 1`] = `
<View
  cardColor="#00676D"
  style={
    Object {
      "backgroundColor": "#00676D",
      "borderRadius": 16,
      "marginHorizontal": 16,
      "marginVertical": 12,
      "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 8,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 16,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#A5A5A5",
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <Image
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://picsum.photos/800/1600/?random",
            },
          ]
        }
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#A5A5A5",
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <BVLinearGradient
        colors={
          Array [
            1711276032,
            2147483648,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            1,
          ]
        }
        overlayColor="#000000"
        overlayType="gradient-bottom"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "bottom": 0,
          "paddingBottom": 32,
          "paddingHorizontal": 24,
          "paddingVertical": 16,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        hasSummary={false}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "paddingTop": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 16,
            }
          }
        >
          <Text
            numberOfLines={4}
            style={
              Object {
                "color": "#F8F7F4",
                "fontFamily": "InterUI-Black",
                "fontSize": 24,
                "lineHeight": 27.6,
              }
            }
          >
            Are you telling me that you built a time machine out of a DeLorean?
          </Text>
        </View>
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={48}
          bbWidth={48}
          height={48}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              undefined,
              null,
              Object {
                "flex": 0,
                "height": 48,
                "width": 48,
              },
            ]
          }
          vbHeight={48}
          vbWidth={48}
          width={48}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGPath
              d="M24 0a24 24 0 1 0 0 48 24 24 0 0 0 0-48z"
              fill={
                Array [
                  0,
                  4294506484,
                ]
              }
              fillOpacity={0.1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M20 15.3c0-1.3.9-1.7 2-1l11 8c1.1.8 1.1 2 0 2.8l-11 8.4c-1.1.9-2 .5-2-.8V15.3z"
              fill={
                Array [
                  0,
                  4294506484,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

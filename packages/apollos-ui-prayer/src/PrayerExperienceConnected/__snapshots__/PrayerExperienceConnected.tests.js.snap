// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The PrayerExperienceConnected component closes onboarding when button is pressed 1`] = `null`;

exports[`The PrayerExperienceConnected component hides onboarding 1`] = `
Array [
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "opacity": 1,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4281348144,
          4278190080,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "flex": 1,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        blurRadius={200}
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "__typename": "ImageMediaSource",
              "cache": "force-cache",
              "uri": "https://1234.image.com",
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#A5A5A5",
            "bottom": 0,
            "left": 0,
            "opacity": 0.5,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </BVLinearGradient>
  </View>,
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4281348144,
          4278190080,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "flex": 1,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        blurRadius={200}
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://123.image-url.com",
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#A5A5A5",
            "bottom": 0,
            "left": 0,
            "opacity": 0.5,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </BVLinearGradient>
  </View>,
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "opacity": -1,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4281348144,
          4278190080,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "flex": 1,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        blurRadius={200}
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://123.image-url.com",
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#A5A5A5",
            "bottom": 0,
            "left": 0,
            "opacity": 0.5,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </BVLinearGradient>
  </View>,
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "opacity": -2,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4281348144,
          4278190080,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "flex": 1,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        blurRadius={200}
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "https://123.image-url.com",
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#A5A5A5",
            "bottom": 0,
            "left": 0,
            "opacity": 0.5,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </BVLinearGradient>
  </View>,
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "opacity": -3,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4281348144,
          4278190080,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "flex": 1,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        blurRadius={200}
        fadeDuration={250}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "cache": "force-cache",
              "uri": "",
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#A5A5A5",
            "bottom": 0,
            "left": 0,
            "opacity": 0.5,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </BVLinearGradient>
  </View>,
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "position": "relative",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      activeDot={
        <withOrientation
          forceInset={
            Object {
              "bottom": "always",
            }
          }
        >
          <mapProps(getContext(mapProps(withPropsOnChange(mapProps(View))))) />
        </withOrientation>
      }
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDirection={true}
      autoplayTimeout={2.5}
      bounces={false}
      contentContainerStyle={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      contentOffset={
        Object {
          "x": 0,
        }
      }
      disableNextButton={false}
      disablePrevButton={false}
      dot={
        <withOrientation
          forceInset={
            Object {
              "bottom": "always",
            }
          }
        >
          <mapProps(getContext(mapProps(withPropsOnChange(mapProps(View)))))
            forceInset={
              Object {
                "bottom": "always",
              }
            }
          />
        </withOrientation>
      }
      horizontal={true}
      index={0}
      loadMinimal={true}
      loadMinimalSize={1}
      loop={false}
      onIndexChanged={[Function]}
      onMomentumScrollEnd={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      orientation="portrait"
      paginationStyle={
        Object {
          "alignItem": "flex-start",
          "bottom": null,
          "justifyContent": "flex-start",
          "left": 16,
        }
      }
      pagingEnabled={true}
      removeClippedSubviews={true}
      scrollsToTop={false}
      showsButtons={false}
      showsHorizontalScrollIndicator={false}
      showsPagination={true}
      showsVerticalScrollIndicator={false}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "height": 1334,
                "width": 750,
              },
              Object {
                "backgroundColor": "transparent",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "paddingBottom": 0,
                },
              ]
            }
          >
            <RCTScrollView
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                }
              }
              keyboardDismissMode="on-drag"
              keyboardShouldPersistTaps="never"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View>
                <RCTSafeAreaView
                  emulateUnlessSupported={true}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flexGrow": 1,
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#303030",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 24,
                              "paddingVertical": 24,
                            }
                          }
                        >
                          <View
                            hasAvatar={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "paddingBottom": 16,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 80,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "height": 80,
                                    "justifyContent": "center",
                                    "width": 80,
                                  }
                                }
                                themeSize={80}
                              >
                                <Image
                                  fadeDuration={250}
                                  onLoad={[Function]}
                                  size="medium"
                                  source={
                                    Array [
                                      Object {
                                        "__typename": "ImageMediaSource",
                                        "cache": "force-cache",
                                        "uri": "https://1234.image.com",
                                      },
                                    ]
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "#A5A5A5",
                                      "borderRadius": 40,
                                      "bottom": 0,
                                      "height": "100%",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                      "width": "100%",
                                    }
                                  }
                                  themeSize={80}
                                />
                              </View>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#F8F7F4",
                                "fontFamily": "InterUI-Bold",
                                "fontSize": 16,
                                "lineHeight": 24,
                              }
                            }
                          >
                            Add your prayer
                          </Text>
                          <View
                            accessible={true}
                            clickable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "paddingBottom": 10,
                                  "paddingTop": 16,
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={24}
                                bbWidth={24}
                                height={24}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    Object {
                                      "marginRight": 8,
                                    },
                                    null,
                                    Object {
                                      "flex": 0,
                                      "height": 24,
                                      "width": 24,
                                    },
                                  ]
                                }
                                vbHeight={24}
                                vbWidth={24}
                                width={24}
                              >
                                <RNSVGGroup
                                  fill={
                                    Array [
                                      0,
                                      4278190080,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  font={Object {}}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={Array []}
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                >
                                  <RNSVGPath
                                    d="M12 23.5a11.5 11.5 0 100-23 11.5 11.5 0 000 23zm0 .5a12 12 0 100-24 12 12 0 000 24z"
                                    fill={
                                      Array [
                                        0,
                                        4294506484,
                                      ]
                                    }
                                    fillOpacity={1}
                                    fillRule={0}
                                    matrix={
                                      Array [
                                        1,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                      ]
                                    }
                                    opacity={1}
                                    originX={0}
                                    originY={0}
                                    propList={
                                      Array [
                                        "fill",
                                        "fillRule",
                                      ]
                                    }
                                    rotation={0}
                                    scaleX={1}
                                    scaleY={1}
                                    skewX={0}
                                    skewY={0}
                                    stroke={null}
                                    strokeDasharray={null}
                                    strokeDashoffset={null}
                                    strokeLinecap={0}
                                    strokeLinejoin={0}
                                    strokeMiterlimit={4}
                                    strokeOpacity={1}
                                    strokeWidth={1}
                                    vectorEffect={0}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGPath
                                    d="M17.7 11.7h-5.4V6.3a.3.3 0 00-.6 0v5.4H6.3a.3.3 0 000 .6h5.4v5.4a.3.3 0 00.6 0v-5.4h5.4a.3.3 0 000-.6z"
                                    fill={
                                      Array [
                                        0,
                                        4294506484,
                                      ]
                                    }
                                    fillOpacity={1}
                                    fillRule={1}
                                    matrix={
                                      Array [
                                        1,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                      ]
                                    }
                                    opacity={1}
                                    originX={0}
                                    originY={0}
                                    propList={
                                      Array [
                                        "fill",
                                      ]
                                    }
                                    rotation={0}
                                    scaleX={1}
                                    scaleY={1}
                                    skewX={0}
                                    skewY={0}
                                    stroke={null}
                                    strokeDasharray={null}
                                    strokeDashoffset={null}
                                    strokeLinecap={0}
                                    strokeLinejoin={0}
                                    strokeMiterlimit={4}
                                    strokeOpacity={1}
                                    strokeWidth={1}
                                    vectorEffect={0}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <Text
                                bold={false}
                                italic={false}
                                style={
                                  Object {
                                    "color": "#F8F7F4",
                                    "fontFamily": "InterUI-Regular",
                                    "fontSize": 16,
                                    "lineHeight": 26,
                                  }
                                }
                              >
                                I need prayer for...
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "paddingHorizontal": 16,
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        bordered={true}
                        disabled={false}
                        pill={true}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderColor": "#A5A5A5",
                            "borderRadius": 48,
                            "borderWidth": 0,
                            "flexDirection": "row",
                            "height": 48,
                            "justifyContent": "center",
                            "opacity": 1,
                            "overflow": "hidden",
                            "paddingHorizontal": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#A5A5A5",
                              "fontFamily": "InterUI-Medium",
                              "fontSize": 14,
                              "lineHeight": 21,
                            }
                          }
                        >
                          No thanks
                        </Text>
                      </View>
                    </View>
                    <View
                      bordered={false}
                      disabled={true}
                      pill={true}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#00676D",
                          "borderColor": "#00676D",
                          "borderRadius": 48,
                          "borderWidth": 2,
                          "elevation": 2,
                          "flexDirection": "row",
                          "height": 48,
                          "justifyContent": "center",
                          "opacity": 0.5,
                          "overflow": "hidden",
                          "paddingHorizontal": 16,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#FFFFFF",
                            "fontFamily": "InterUI-Bold",
                            "fontSize": 16,
                            "lineHeight": 24,
                          }
                        }
                      >
                        Share prayer
                      </Text>
                    </View>
                  </View>
                </RCTSafeAreaView>
              </View>
            </RCTScrollView>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 1334,
                "width": 750,
              },
              Object {
                "backgroundColor": "transparent",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "paddingBottom": 0,
                },
              ]
            }
          >
            <RCTScrollView
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                }
              }
              keyboardDismissMode="on-drag"
              keyboardShouldPersistTaps="never"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View>
                <RCTSafeAreaView
                  emulateUnlessSupported={true}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flexGrow": 1,
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#303030",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 24,
                              "paddingVertical": 24,
                            }
                          }
                        >
                          <View
                            hasAvatar={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "paddingBottom": 16,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "borderRadius": 80,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "height": 80,
                                    "justifyContent": "center",
                                    "width": 80,
                                  }
                                }
                                themeSize={80}
                              >
                                <Image
                                  fadeDuration={250}
                                  onLoad={[Function]}
                                  size="medium"
                                  source={
                                    Array [
                                      Object {
                                        "cache": "force-cache",
                                        "uri": "https://123.image-url.com",
                                      },
                                    ]
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "#A5A5A5",
                                      "borderRadius": 40,
                                      "bottom": 0,
                                      "height": "100%",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                      "width": "100%",
                                    }
                                  }
                                  themeSize={80}
                                />
                              </View>
                            </View>
                          </View>
                          <Text
                            padded={true}
                            style={
                              Object {
                                "color": "#F8F7F4",
                                "fontFamily": "InterUI-Bold",
                                "fontSize": 16,
                                "lineHeight": 24,
                                "paddingBottom": 12,
                                "paddingTop": 15.84,
                              }
                            }
                          >
                            Pray for Father
                          </Text>
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#F8F7F4",
                                "fontFamily": "InterUI-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            I pray for you.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "paddingHorizontal": 16,
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        bordered={false}
                        disabled={false}
                        pill={true}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#00676D",
                            "borderColor": "#00676D",
                            "borderRadius": 48,
                            "borderWidth": 2,
                            "elevation": 2,
                            "flexDirection": "row",
                            "height": 48,
                            "justifyContent": "center",
                            "opacity": 1,
                            "overflow": "hidden",
                            "paddingHorizontal": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#FFFFFF",
                              "fontFamily": "InterUI-Bold",
                              "fontSize": 16,
                              "lineHeight": 24,
                            }
                          }
                        >
                          🙏 Pray
                        </Text>
                      </View>
                    </View>
                  </View>
                </RCTSafeAreaView>
              </View>
            </RCTScrollView>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 1334,
              "justifyContent": "center",
              "width": 750,
            }
          }
        >
          <ActivityIndicator
            animating={true}
            color="#999999"
            hidesWhenStopped={true}
            size="small"
          />
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 1334,
              "justifyContent": "center",
              "width": 750,
            }
          }
        >
          <ActivityIndicator
            animating={true}
            color="#999999"
            hidesWhenStopped={true}
            size="small"
          />
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 1334,
              "justifyContent": "center",
              "width": 750,
            }
          }
        >
          <ActivityIndicator
            animating={true}
            color="#999999"
            hidesWhenStopped={true}
            size="small"
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "bottom": 25,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          Object {
            "alignItem": "flex-start",
            "bottom": null,
            "justifyContent": "flex-start",
            "left": 16,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#00676D",
              "borderRadius": 2,
              "height": 2,
              "marginHorizontal": 1,
              "width": 24,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <View
          forceInset={
            Object {
              "bottom": "always",
            }
          }
          style={
            Object {
              "backgroundColor": "rgba(248, 247, 244, 0.09999999999999998)",
              "borderRadius": 2,
              "height": 2,
              "marginHorizontal": 1,
              "width": 24,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <View
          forceInset={
            Object {
              "bottom": "always",
            }
          }
          style={
            Object {
              "backgroundColor": "rgba(248, 247, 244, 0.09999999999999998)",
              "borderRadius": 2,
              "height": 2,
              "marginHorizontal": 1,
              "width": 24,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <View
          forceInset={
            Object {
              "bottom": "always",
            }
          }
          style={
            Object {
              "backgroundColor": "rgba(248, 247, 244, 0.09999999999999998)",
              "borderRadius": 2,
              "height": 2,
              "marginHorizontal": 1,
              "width": 24,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <View
          forceInset={
            Object {
              "bottom": "always",
            }
          }
          style={
            Object {
              "backgroundColor": "rgba(248, 247, 244, 0.09999999999999998)",
              "borderRadius": 2,
              "height": 2,
              "marginHorizontal": 1,
              "width": 24,
            }
          }
        />
      </View>
    </View>
  </View>,
]
`;

exports[`The PrayerExperienceConnected component prays 1`] = `null`;

exports[`The PrayerExperienceConnected component should render 1`] = `
Array [
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="small"
    style={
      Object {
        "alignSelf": "center",
        "bottom": 0,
        "flex": 1,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />,
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4281348144,
          4278190080,
        ]
      }
      endPoint={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "flex": 1,
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        blurRadius={200}
        fadeDuration={250}
        onLoad={[Function]}
        source={Array []}
        style={
          Object {
            "backgroundColor": "#A5A5A5",
            "bottom": 0,
            "left": 0,
            "opacity": 0.5,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "paddingBottom": 0,
            },
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          keyboardDismissMode="on-drag"
          keyboardShouldPersistTaps="never"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View>
            <RCTSafeAreaView
              emulateUnlessSupported={true}
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexGrow": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexGrow": 1,
                      "paddingHorizontal": 16,
                      "paddingVertical": 16,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#F8F7F4",
                        "fontFamily": "InterUI-Black",
                        "fontSize": 24,
                        "lineHeight": 27.6,
                        "textAlign": "center",
                      }
                    }
                  >
                    Join us today in prayer
                  </Text>
                  <View
                    style={
                      Object {
                        "paddingHorizontal": "10%",
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <Text
                      bold={false}
                      italic={false}
                      style={
                        Object {
                          "color": "#F8F7F4",
                          "fontFamily": "InterUI-Regular",
                          "fontSize": 16,
                          "lineHeight": 26,
                          "textAlign": "center",
                        }
                      }
                    >
                      Each day we ask the community for prayer. These prayers last for only 24 hours so that you can reach out to our community and ask for what you need today, and every day.
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  accessible={true}
                  clickable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    bordered={false}
                    disabled={false}
                    pill={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#00676D",
                        "borderColor": "#00676D",
                        "borderRadius": 48,
                        "borderWidth": 2,
                        "elevation": 2,
                        "flexDirection": "row",
                        "height": 48,
                        "justifyContent": "center",
                        "opacity": 1,
                        "overflow": "hidden",
                        "paddingHorizontal": 16,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#FFFFFF",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 16,
                          "lineHeight": 24,
                        }
                      }
                    >
                      Next
                    </Text>
                  </View>
                </View>
              </View>
            </RCTSafeAreaView>
          </View>
        </RCTScrollView>
      </View>
    </BVLinearGradient>
  </View>,
]
`;

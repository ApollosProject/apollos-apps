// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LikedContentList component renders LikedContentList 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4294967295,
          4294506484,
        ]
      }
      locations={null}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "paddingVertical": 7.2,
          }
        }
        data={
          Array [
            Object {
              "__typename": "UniversalContentItem",
              "coverImage": Object {
                "sources": Array [
                  Object {
                    "uri": "https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31",
                  },
                ],
              },
              "id": "UniversalContentItem:4148aeb9482181025e9cad42826e676a",
              "title": "Making Prayer a Spiritual Habit",
            },
            Object {
              "__typename": "UniversalContentItem",
              "coverImage": Object {
                "sources": Array [
                  Object {
                    "uri": "https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e",
                  },
                ],
              },
              "id": "UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e",
              "title": "Vacations and Your Budget",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={5}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={0.7}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onPressItem={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        refreshing={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <RCTRefreshControl />
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "transform": Array [
                    Object {
                      "scale": 1,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 16,
                    "marginHorizontal": 16,
                    "marginVertical": 12,
                    "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 6,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "aspectRatio": undefined,
                      "borderRadius": 16,
                      "overflow": "hidden",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "paddingHorizontal": 16,
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#303030",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 16,
                          "lineHeight": 23.04,
                          "textAlign": "center",
                        }
                      }
                    >
                      Uh oh!
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#505050",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "textAlign": "center",
                        }
                      }
                    >
                      Network error: No more mocked responses for the query: query getContentCard($contentId: ID!, $tile: Boolean!) {
  node(id: $contentId) {
    id
    __typename
    ...tileCardFragment @include(if: $tile)
    ...largeCardFragment @skip(if: $tile)
  }
}

fragment tileCardFragment on ContentItem {
  ... on ContentSeriesContentItem {
    id
    ...themeFragment
    ...coverImageFragment
    ...contentCardMetricsFragment
    __typename
  }
  ... on UniversalContentItem {
    ...baseCardFragment
    __typename
  }
  ... on DevotionalContentItem {
    ...baseCardFragment
    __typename
  }
  ... on MediaContentItem {
    ...baseCardFragment
    __typename
  }
  __typename
}

fragment baseCardFragment on ContentItem {
  id
  __typename
  ...contentCardMetricsFragment
  ...coverImageFragment
  ...themeFragment
  title
  summary
}

fragment contentCardMetricsFragment on ContentItem {
  isLiked
  likedCount
  __typename
}

fragment coverImageFragment on ContentItem {
  coverImage {
    sources {
      uri
      __typename
    }
    __typename
  }
  __typename
}

fragment themeFragment on ContentItem {
  theme {
    type
    colors {
      primary
      secondary
      screen
      paper
      __typename
    }
    __typename
  }
  __typename
}

fragment largeCardFragment on ContentItem {
  ...baseCardFragment
  __typename
}
, variables: {"contentId":"UniversalContentItem:4148aeb9482181025e9cad42826e676a","tile":false}
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "transform": Array [
                    Object {
                      "scale": 1,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 16,
                    "marginHorizontal": 16,
                    "marginVertical": 12,
                    "shadowColor": "rgba(165, 165, 165, 0.30000000000000004)",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 6,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "aspectRatio": undefined,
                      "borderRadius": 16,
                      "overflow": "hidden",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "paddingHorizontal": 16,
                        "paddingVertical": 16,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#303030",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 16,
                          "lineHeight": 23.04,
                          "textAlign": "center",
                        }
                      }
                    >
                      Uh oh!
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#505050",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "textAlign": "center",
                        }
                      }
                    >
                      Network error: No more mocked responses for the query: query getContentCard($contentId: ID!, $tile: Boolean!) {
  node(id: $contentId) {
    id
    __typename
    ...tileCardFragment @include(if: $tile)
    ...largeCardFragment @skip(if: $tile)
  }
}

fragment tileCardFragment on ContentItem {
  ... on ContentSeriesContentItem {
    id
    ...themeFragment
    ...coverImageFragment
    ...contentCardMetricsFragment
    __typename
  }
  ... on UniversalContentItem {
    ...baseCardFragment
    __typename
  }
  ... on DevotionalContentItem {
    ...baseCardFragment
    __typename
  }
  ... on MediaContentItem {
    ...baseCardFragment
    __typename
  }
  __typename
}

fragment baseCardFragment on ContentItem {
  id
  __typename
  ...contentCardMetricsFragment
  ...coverImageFragment
  ...themeFragment
  title
  summary
}

fragment contentCardMetricsFragment on ContentItem {
  isLiked
  likedCount
  __typename
}

fragment coverImageFragment on ContentItem {
  coverImage {
    sources {
      uri
      __typename
    }
    __typename
  }
  __typename
}

fragment themeFragment on ContentItem {
  theme {
    type
    colors {
      primary
      secondary
      screen
      paper
      __typename
    }
    __typename
  }
  __typename
}

fragment largeCardFragment on ContentItem {
  ...baseCardFragment
  __typename
}
, variables: {"contentId":"UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e","tile":false}
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </BVLinearGradient>
  </View>
</RCTSafeAreaView>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The TileFeed component renders correctly 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "padding": 8,
          "paddingBottom": 0,
        }
      }
      data={
        Array [
          Object {
            "node": Object {
              "id": "fakeId0",
              "title": "Why Jesus is Timeless",
            },
          },
          Object {
            "node": Object {
              "id": "fakeId1",
              "title": "Why Jesus is Timeless",
            },
          },
        ]
      }
      decelerationRate="fast"
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      initialNumToRender={10}
      initialScrollIndex={0}
      keyExtractor={[Function]}
      loadingStateObject={
        Object {
          "id": "fakeId0",
          "isLoading": false,
          "title": "",
        }
      }
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshing={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsHorizontalScrollIndicator={false}
      snapToAlignment="start"
      snapToInterval={512}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "borderRadius": 16,
                  "width": 495,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 16,
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  size={1}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#FFFFFF",
                      "borderBottomRightRadius": 16,
                      "borderTopLeftRadius": 16,
                      "height": 32,
                      "justifyContent": "center",
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": 32,
                    }
                  }
                >
                  <View>
                    <Text
                      style={
                        Object {
                          "color": "#303030",
                          "fontFamily": "InterUI-Medium",
                          "fontSize": 14,
                          "lineHeight": 20.16,
                        }
                      }
                    >
                      1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "aspectRatio": 1,
                  "backgroundColor": "#A5A5A5",
                  "borderRadius": 16,
                  "width": 495,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 16,
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  size={1}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#FFFFFF",
                      "borderBottomRightRadius": 16,
                      "borderTopLeftRadius": 16,
                      "height": 32,
                      "justifyContent": "center",
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": 32,
                    }
                  }
                >
                  <View>
                    <Text
                      style={
                        Object {
                          "color": "#303030",
                          "fontFamily": "InterUI-Medium",
                          "fontSize": 14,
                          "lineHeight": 20.16,
                        }
                      }
                    >
                      2
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;

exports[`The TileFeed component renders empty state 1`] = `
<RCTSafeAreaView
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "padding": 8,
          "paddingBottom": 0,
        }
      }
      data={Array []}
      decelerationRate="fast"
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      initialNumToRender={10}
      initialScrollIndex={0}
      keyExtractor={[Function]}
      loadingStateObject={
        Object {
          "id": "fakeId0",
          "isLoading": true,
          "title": "",
        }
      }
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshing={true}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsHorizontalScrollIndicator={false}
      snapToAlignment="start"
      snapToInterval={512}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;

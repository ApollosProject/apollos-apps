// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentSingleFeatures should render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    horizontal={false}
    style={
      Object {
        "paddingHorizontal": 0,
        "paddingVertical": 16,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 0,
        }
      }
      vertical={false}
    >
      <Text
        padded={true}
        style={
          Object {
            "color": "#27272E",
            "fontFamily": "InterUI-Black",
            "fontSize": 24,
            "lineHeight": 27.6,
            "paddingBottom": 18,
            "paddingTop": 27,
          }
        }
      >
        Engage
      </Text>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 16,
          "marginHorizontal": 16,
          "marginVertical": 12,
          "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
          "shadowOffset": Object {
            "height": 20,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 48,
        }
      }
    >
      <View
        style={
          Object {
            "borderRadius": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <Text
            bold={false}
            italic={false}
            style={
              Object {
                "color": "#27272E",
                "fontFamily": "InterUI-Regular",
                "fontSize": 16,
                "lineHeight": 26,
              }
            }
          >
            this is another, text feature
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "flex-end",
              "paddingHorizontal": 16,
              "paddingTop": 0,
              "paddingVertical": 16,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
            "shadowOffset": Object {
              "height": 20,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 48,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#27272E",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Mark 1:12
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
            "shadowOffset": Object {
              "height": 20,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 48,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#27272E",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              John 3:16
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ContentSingleFeatures should render a loading state 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    horizontal={false}
    style={
      Object {
        "paddingHorizontal": 0,
        "paddingVertical": 16,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 0,
        }
      }
      vertical={false}
    >
      <View
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#A5A5A5",
            "borderRadius": 16,
            "height": 24,
            "marginBottom": 18,
            "marginTop": 27,
            "marginVertical": 1.8000000000000007,
            "width": "100%",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 16,
          "marginHorizontal": 16,
          "marginVertical": 12,
          "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
          "shadowOffset": Object {
            "height": 20,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 48,
        }
      }
    >
      <View
        style={
          Object {
            "borderRadius": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <Text
            bold={false}
            italic={false}
            style={
              Object {
                "color": "#27272E",
                "fontFamily": "InterUI-Regular",
                "fontSize": 16,
                "lineHeight": 26,
              }
            }
          >
            this is another, text feature
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "flex-end",
              "paddingHorizontal": 16,
              "paddingTop": 0,
              "paddingVertical": 16,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={32}
              bbWidth={32}
              color="#17B582"
              height={32}
              id="Raw"
              meetOrSlice={0}
              minX={0}
              minY={0}
              size={32}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {},
                  null,
                  Object {
                    "flex": 0,
                    "height": 32,
                    "width": 32,
                  },
                ]
              }
              tintColor="#17B582"
              vbHeight={256}
              vbWidth={256}
              width={32}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGRect
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  height={256}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  rx={0}
                  ry={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  width={256}
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M176 152 224 104 176 56"
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={
                    Array [
                      0,
                      4279743874,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={16}
                  vectorEffect={0}
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M192,216H40a8,8,0,0,1-8-8V88"
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={
                    Array [
                      0,
                      4279743874,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={16}
                  vectorEffect={0}
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M75.0245,175.99967A96.04041,96.04041,0,0,1,168,104h56"
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={
                    Array [
                      0,
                      4279743874,
                    ]
                  }
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={16}
                  vectorEffect={0}
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
            "shadowOffset": Object {
              "height": 20,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 48,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#27272E",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Mark 1:12
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
            "shadowOffset": Object {
              "height": 20,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 48,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#27272E",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              John 3:16
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ContentSingleFeatures should take a custom title 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    horizontal={false}
    style={
      Object {
        "paddingHorizontal": 0,
        "paddingVertical": 16,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 0,
        }
      }
      vertical={false}
    >
      <Text
        padded={true}
        style={
          Object {
            "color": "#27272E",
            "fontFamily": "InterUI-Black",
            "fontSize": 24,
            "lineHeight": 27.6,
            "paddingBottom": 18,
            "paddingTop": 27,
          }
        }
      >
        Custom Title
      </Text>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 16,
          "marginHorizontal": 16,
          "marginVertical": 12,
          "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
          "shadowOffset": Object {
            "height": 20,
            "width": 0,
          },
          "shadowOpacity": 1,
          "shadowRadius": 48,
        }
      }
    >
      <View
        style={
          Object {
            "borderRadius": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <Text
            bold={false}
            italic={false}
            style={
              Object {
                "color": "#27272E",
                "fontFamily": "InterUI-Regular",
                "fontSize": 16,
                "lineHeight": 26,
              }
            }
          >
            this is another, text feature
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "flex-end",
              "paddingHorizontal": 16,
              "paddingTop": 0,
              "paddingVertical": 16,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
            "shadowOffset": Object {
              "height": 20,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 48,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#27272E",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Mark 1:12
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 16,
            "marginHorizontal": 16,
            "marginVertical": 12,
            "shadowColor": "rgba(0, 0, 0, 0.08999999999999997)",
            "shadowOffset": Object {
              "height": 20,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 48,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#27272E",
                  "fontFamily": "InterUI-Bold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              John 3:16
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

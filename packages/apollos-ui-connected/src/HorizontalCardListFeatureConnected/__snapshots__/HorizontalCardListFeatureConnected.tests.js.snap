// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The HorizontalCardListFeatureConnected component should render 1`] = `
<View>
  <View
    style={
      Object {
        "paddingBottom": 8,
        "paddingHorizontal": 16,
        "paddingTop": 48,
        "paddingVertical": 0,
      }
    }
    vertical={false}
  >
    <Text
      numberOfLines={1}
      style={
        Object {
          "color": "#A5A5A5",
          "fontFamily": "InterUI-Medium",
          "fontSize": 14,
          "lineHeight": 21,
        }
      }
    >
      Some cool list
    </Text>
    <Text
      style={
        Object {
          "color": "#303030",
          "fontFamily": "InterUI-Black",
          "fontSize": 36,
          "lineHeight": 41.4,
        }
      }
    >
      Check it out
    </Text>
  </View>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "padding": 8,
        "paddingBottom": 0,
      }
    }
    data={
      Array [
        Object {
          "__typename": "UniversalContentItem",
          "action": "READ_CONTENT",
          "coverImage": Array [
            Object {
              "__typename": "ImageMediaSource",
              "uri": "https://picsum.photos/200/200",
            },
          ],
          "hasAction": false,
          "hyphenatedTitle": "Boom",
          "id": "UniversalContentItem:123",
          "labelText": "What",
          "relatedNode": Object {
            "__typename": "UniversalContentItem",
            "id": "UniversalContentItem:123",
          },
          "summary": "Read",
          "title": "Boom",
        },
      ]
    }
    decelerationRate="fast"
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    initialNumToRender={10}
    initialScrollIndex={0}
    keyExtractor={[Function]}
    loadingStateObject={
      Object {
        "__typename": "MediaContentItem",
        "actionIcon": "umbrella",
        "channelType": "",
        "coverImage": Array [],
        "hasAction": true,
        "id": "fakeId0",
        "isLoading": true,
        "title": "Boom",
      }
    }
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    snapToAlignment="start"
    snapToInterval={256}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            inHorizontalList={true}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 16,
                "height": 240,
                "margin": 8,
                "marginBottom": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
                "width": 240,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <RCTImageView
                  hasTitleAndSummary={true}
                  maxAspectRatio={2}
                  minAspectRatio={2}
                  onLoad={[Function]}
                  resizeMode="cover"
                  source={
                    Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "cache": "force-cache",
                        "height": 600,
                        "uri": "https://picsum.photos/200/200",
                        "width": 500,
                      },
                    ]
                  }
                  style={
                    Object {
                      "aspectRatio": 2,
                      "backgroundColor": "#A5A5A5",
                      "opacity": 0,
                      "overflow": "hidden",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                />
                <BVLinearGradient
                  colors={
                    Array [
                      2147483648,
                      0,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-top"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "paddingBottom": 24,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                  }
                }
              >
                <Text
                  numberOfLines={2}
                  style={
                    Object {
                      "color": "#303030",
                      "fontFamily": "InterUI-Medium",
                      "fontSize": 14,
                      "lineHeight": 21,
                    }
                  }
                >
                  Boom
                </Text>
                <Text
                  bold={false}
                  hasTitle="Boom"
                  italic={false}
                  numberOfLines={2}
                  style={
                    Object {
                      "color": "#A5A5A5",
                      "fontFamily": "InterUI-Regular",
                      "fontSize": 12,
                      "lineHeight": 18,
                      "paddingTop": 8,
                    }
                  }
                >
                  Read
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`The HorizontalCardListFeatureConnected component should render a loading state when isLoading 1`] = `
<View>
  <View
    style={
      Object {
        "paddingBottom": 8,
        "paddingHorizontal": 16,
        "paddingTop": 48,
        "paddingVertical": 0,
      }
    }
    vertical={false}
  >
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#A5A5A5",
          "borderRadius": 16,
          "height": 14,
          "marginVertical": 3.5,
          "width": "60%",
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#A5A5A5",
          "borderRadius": 16,
          "height": 36,
          "marginVertical": 2.6999999999999993,
          "width": "100%",
        }
      }
    />
  </View>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "padding": 8,
        "paddingBottom": 0,
      }
    }
    data={
      Array [
        Object {
          "__typename": "MediaContentItem",
          "actionIcon": "umbrella",
          "channelType": "",
          "coverImage": Array [],
          "hasAction": true,
          "id": "fakeId0",
          "isLoading": true,
          "title": "Boom",
        },
        Object {
          "__typename": "MediaContentItem",
          "actionIcon": "umbrella",
          "channelType": "",
          "coverImage": Array [],
          "hasAction": true,
          "id": "fakeId1",
          "isLoading": true,
          "title": "Boom",
        },
        Object {
          "__typename": "MediaContentItem",
          "actionIcon": "umbrella",
          "channelType": "",
          "coverImage": Array [],
          "hasAction": true,
          "id": "fakeId2",
          "isLoading": true,
          "title": "Boom",
        },
        Object {
          "__typename": "MediaContentItem",
          "actionIcon": "umbrella",
          "channelType": "",
          "coverImage": Array [],
          "hasAction": true,
          "id": "fakeId3",
          "isLoading": true,
          "title": "Boom",
        },
        Object {
          "__typename": "MediaContentItem",
          "actionIcon": "umbrella",
          "channelType": "",
          "coverImage": Array [],
          "hasAction": true,
          "id": "fakeId4",
          "isLoading": true,
          "title": "Boom",
        },
      ]
    }
    decelerationRate="fast"
    disableVirtualization={false}
    fetchMore={[Function]}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    initialNumToRender={10}
    initialScrollIndex={0}
    keyExtractor={[Function]}
    loadingStateObject={
      Object {
        "__typename": "MediaContentItem",
        "actionIcon": "umbrella",
        "channelType": "",
        "coverImage": Array [],
        "hasAction": true,
        "id": "fakeId0",
        "isLoading": true,
        "title": "Boom",
      }
    }
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={true}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    snapToAlignment="start"
    snapToInterval={256}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            __typename="MediaContentItem"
            channelType=""
            id="fakeId0"
            inHorizontalList={true}
            isLive={false}
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#303030",
                "borderRadius": 16,
                "height": 240,
                "margin": 8,
                "marginBottom": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
                "width": 240,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <View
                  animate={null}
                  customAnimate={null}
                  forceRatio={1}
                  onReady={false}
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                >
                  <RCTImageView
                    maxAspectRatio={1}
                    minAspectRatio={1}
                    onLoad={[Function]}
                    resizeMode="cover"
                    source={Array []}
                    style={
                      Object {
                        "aspectRatio": 1,
                        "backgroundColor": "#A5A5A5",
                        "opacity": 0,
                        "overflow": "hidden",
                        "resizeMode": "cover",
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      1711276032,
                      2147483648,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-bottom"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "bottom": 0,
                    "paddingBottom": 24,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    hasAction={true}
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 24,
                          "marginVertical": 1.8000000000000007,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            __typename="MediaContentItem"
            channelType=""
            id="fakeId1"
            inHorizontalList={true}
            isLive={false}
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#303030",
                "borderRadius": 16,
                "height": 240,
                "margin": 8,
                "marginBottom": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
                "width": 240,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <View
                  animate={null}
                  customAnimate={null}
                  forceRatio={1}
                  onReady={false}
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                >
                  <RCTImageView
                    maxAspectRatio={1}
                    minAspectRatio={1}
                    onLoad={[Function]}
                    resizeMode="cover"
                    source={Array []}
                    style={
                      Object {
                        "aspectRatio": 1,
                        "backgroundColor": "#A5A5A5",
                        "opacity": 0,
                        "overflow": "hidden",
                        "resizeMode": "cover",
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      1711276032,
                      2147483648,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-bottom"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "bottom": 0,
                    "paddingBottom": 24,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    hasAction={true}
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 24,
                          "marginVertical": 1.8000000000000007,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            __typename="MediaContentItem"
            channelType=""
            id="fakeId2"
            inHorizontalList={true}
            isLive={false}
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#303030",
                "borderRadius": 16,
                "height": 240,
                "margin": 8,
                "marginBottom": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
                "width": 240,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <View
                  animate={null}
                  customAnimate={null}
                  forceRatio={1}
                  onReady={false}
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                >
                  <RCTImageView
                    maxAspectRatio={1}
                    minAspectRatio={1}
                    onLoad={[Function]}
                    resizeMode="cover"
                    source={Array []}
                    style={
                      Object {
                        "aspectRatio": 1,
                        "backgroundColor": "#A5A5A5",
                        "opacity": 0,
                        "overflow": "hidden",
                        "resizeMode": "cover",
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      1711276032,
                      2147483648,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-bottom"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "bottom": 0,
                    "paddingBottom": 24,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    hasAction={true}
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 24,
                          "marginVertical": 1.8000000000000007,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            __typename="MediaContentItem"
            channelType=""
            id="fakeId3"
            inHorizontalList={true}
            isLive={false}
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#303030",
                "borderRadius": 16,
                "height": 240,
                "margin": 8,
                "marginBottom": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
                "width": 240,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <View
                  animate={null}
                  customAnimate={null}
                  forceRatio={1}
                  onReady={false}
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                >
                  <RCTImageView
                    maxAspectRatio={1}
                    minAspectRatio={1}
                    onLoad={[Function]}
                    resizeMode="cover"
                    source={Array []}
                    style={
                      Object {
                        "aspectRatio": 1,
                        "backgroundColor": "#A5A5A5",
                        "opacity": 0,
                        "overflow": "hidden",
                        "resizeMode": "cover",
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      1711276032,
                      2147483648,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-bottom"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "bottom": 0,
                    "paddingBottom": 24,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    hasAction={true}
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 24,
                          "marginVertical": 1.8000000000000007,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessible={true}
          clickable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            __typename="MediaContentItem"
            channelType=""
            id="fakeId4"
            inHorizontalList={true}
            isLive={false}
            isLoading={true}
            style={
              Object {
                "backgroundColor": "#303030",
                "borderRadius": 16,
                "height": 240,
                "margin": 8,
                "marginBottom": 12,
                "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
                "width": 240,
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#A5A5A5",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <View
                  animate={null}
                  customAnimate={null}
                  forceRatio={1}
                  onReady={false}
                  style={
                    Object {
                      "aspectRatio": 1,
                      "backgroundColor": "#A5A5A5",
                      "resizeMode": "cover",
                      "width": "100%",
                    }
                  }
                >
                  <RCTImageView
                    maxAspectRatio={1}
                    minAspectRatio={1}
                    onLoad={[Function]}
                    resizeMode="cover"
                    source={Array []}
                    style={
                      Object {
                        "aspectRatio": 1,
                        "backgroundColor": "#A5A5A5",
                        "opacity": 0,
                        "overflow": "hidden",
                        "resizeMode": "cover",
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      1711276032,
                      2147483648,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      1,
                    ]
                  }
                  overlayColor="#000000"
                  overlayType="gradient-bottom"
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "bottom": 0,
                    "paddingBottom": 24,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexDirection": "row",
                      "paddingTop": 16,
                    }
                  }
                >
                  <View
                    hasAction={true}
                    style={
                      Object {
                        "flex": 1,
                        "marginRight": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#A5A5A5",
                          "borderRadius": 16,
                          "height": 24,
                          "marginVertical": 1.8000000000000007,
                          "width": "100%",
                        }
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#A5A5A5",
                        "borderRadius": 16,
                        "height": 32,
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
